(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    260993,       5914]
NotebookOptionsPosition[    257053,       5795]
NotebookOutlinePosition[    258667,       5845]
CellTagsIndexPosition[    258331,       5833]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Interactive Venn Diagrams", "DemoTitle",
 CellChangeTimes->{
  3.35696210375764*^9, {3.487677225109375*^9, 3.487677234765625*^9}}],

Cell["", "InitializationSection"],

Cell[CellGroupData[{

Cell["", "ManipulateSection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Switch", "[", 
    RowBox[{"num", ",", "2", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"expList", "=", 
       RowBox[{"{", 
        RowBox[{"exp21", ",", "exp22", ",", "exp23", ",", "exp24"}], "}"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"glList", "=", 
       RowBox[{"{", 
        RowBox[{"gl21", ",", "gl22", ",", "gl23", ",", "gl24"}], "}"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"expParts", "=", 
       RowBox[{"Pick", "[", 
        RowBox[{"expList", ",", "glList", ",", "0.8"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"setStringDNF", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"ToUpperCase", "[", 
          RowBox[{"ToString", "[", 
           RowBox[{"BooleanMinimize", "[", 
            RowBox[{
             RowBox[{"Or", "@@", "expParts"}], ",", "\"\<DNF\>\""}], "]"}], 
           "]"}], "]"}], ",", "\[IndentingNewLine]", "replacementsList"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newSetStringsDNF", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"StringCases", "[", 
          RowBox[{"setStringDNF", ",", 
           RowBox[{"\"\<!(\>\"", "~~", "__", "~~", "\"\<)\>\""}], ",", 
           RowBox[{"Overlaps", "\[Rule]", "All"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"StringCount", "[", 
            RowBox[{"#", ",", "\"\<(\>\""}], "]"}], "\[Equal]", "1"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newStringsDNF", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"newSetStringsDNF", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<!(\>\"", "\[Rule]", "\"\<(\>\""}], ",", 
           RowBox[{
           "\"\<)\>\"", "\[Rule]", 
            "\"\<\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)\>\""}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"setStringFinalDNF", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"setStringDNF", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"newSetStringsDNF", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
            RowBox[{"newStringsDNF", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "newSetStringsDNF", "]"}]}], "}"}]}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"setStringCNF", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"ToUpperCase", "[", 
          RowBox[{"ToString", "[", 
           RowBox[{"BooleanMinimize", "[", 
            RowBox[{
             RowBox[{"Or", "@@", "expParts"}], ",", "\"\<CNF\>\""}], "]"}], 
           "]"}], "]"}], ",", "\[IndentingNewLine]", "replacementsList"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newSetStringsCNF", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"StringCases", "[", 
          RowBox[{"setStringCNF", ",", 
           RowBox[{"\"\<!(\>\"", "~~", "__", "~~", "\"\<)\>\""}], ",", 
           RowBox[{"Overlaps", "\[Rule]", "All"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"StringCount", "[", 
            RowBox[{"#", ",", "\"\<(\>\""}], "]"}], "\[Equal]", "1"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newStringsCNF", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"newSetStringsCNF", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<!(\>\"", "\[Rule]", "\"\<(\>\""}], ",", 
           RowBox[{
           "\"\<)\>\"", "\[Rule]", 
            "\"\<\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)\>\""}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"setStringFinalCNF", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"setStringCNF", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"newSetStringsCNF", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
            RowBox[{"newStringsCNF", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "newSetStringsCNF", "]"}]}], "}"}]}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"setStringOR", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"ToUpperCase", "[", 
          RowBox[{"ToString", "[", 
           RowBox[{"BooleanMinimize", "[", 
            RowBox[{
             RowBox[{"Or", "@@", "expParts"}], ",", "\"\<OR\>\""}], "]"}], 
           "]"}], "]"}], ",", "\[IndentingNewLine]", "replacementsList"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newSetStringsOR", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"StringCases", "[", 
          RowBox[{"setStringOR", ",", 
           RowBox[{"\"\<!(\>\"", "~~", "__", "~~", "\"\<)\>\""}], ",", 
           RowBox[{"Overlaps", "\[Rule]", "All"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"StringCount", "[", 
            RowBox[{"#", ",", "\"\<(\>\""}], "]"}], "\[Equal]", "1"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newStringsOR", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"newSetStringsOR", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<!(\>\"", "\[Rule]", "\"\<(\>\""}], ",", 
           RowBox[{
           "\"\<)\>\"", "\[Rule]", 
            "\"\<\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)\>\""}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"setStringFinalOR", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"setStringOR", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"newSetStringsOR", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
            RowBox[{"newStringsOR", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "newSetStringsOR", "]"}]}], "}"}]}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"setStringAND", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"ToUpperCase", "[", 
          RowBox[{"ToString", "[", 
           RowBox[{"BooleanMinimize", "[", 
            RowBox[{
             RowBox[{"Or", "@@", "expParts"}], ",", "\"\<AND\>\""}], "]"}], 
           "]"}], "]"}], ",", "\[IndentingNewLine]", "replacementsList"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newSetStringsAND", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"StringCases", "[", 
          RowBox[{"setStringAND", ",", 
           RowBox[{"\"\<!(\>\"", "~~", "__", "~~", "\"\<)\>\""}], ",", 
           RowBox[{"Overlaps", "\[Rule]", "All"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"StringCount", "[", 
            RowBox[{"#", ",", "\"\<(\>\""}], "]"}], "\[Equal]", "1"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newStringsAND", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"newSetStringsAND", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<!(\>\"", "\[Rule]", "\"\<(\>\""}], ",", 
           RowBox[{
           "\"\<)\>\"", "\[Rule]", 
            "\"\<\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)\>\""}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"setStringFinalAND", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"setStringAND", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"newSetStringsAND", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
            RowBox[{"newStringsAND", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "newSetStringsAND", "]"}]}], "}"}]}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"setNotations", "=", 
       RowBox[{"Text", "@", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"TableForm", "[", 
           RowBox[{
            RowBox[{"DeleteDuplicates", "[", 
             RowBox[{"{", 
              RowBox[{
              "setStringFinalDNF", ",", "setStringFinalCNF", ",", 
               "setStringFinalOR", ",", "setStringFinalAND"}], "}"}], "]"}], 
            ",", 
            RowBox[{"TableSpacing", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"1.5", ",", "Automatic"}], "}"}]}]}], "]"}], ",", 
          "Italic", ",", "24"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"aOnly", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"GrayLevel", "[", "gl21", "]"}], "]"}], ",", 
          RowBox[{"Button", "[", 
           RowBox[{
            RowBox[{"Polygon", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"Join", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "-", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "k", ",", 
                    RowBox[{"5", "k"}]}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Reverse", "[", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "+", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"2", "k"}], ",", 
                    RowBox[{"4", "k"}]}], "}"}]}], "]"}], "]"}]}], "]"}], 
              "\[IndentingNewLine]", "}"}], "]"}], "                   ", ",", 
            RowBox[{"gl21", "=", 
             RowBox[{"1.8", "-", "gl21"}]}]}], "     ", "]"}], "   ", ",", 
          " ", 
          RowBox[{"Inset", "[", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<A\>\"", ",", "Black", ",", "Italic", ",", "Large"}], 
               "]"}], ",", 
              RowBox[{"FormatType", "\[Rule]", "StandardForm"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.4"}], ",", "0.8"}], "}"}]}], "  ", "]"}]}], 
         "   ", "                           ", "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bOnly", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"GrayLevel", "[", "gl22", "]"}], "]"}], ",", 
          RowBox[{"Button", "[", 
           RowBox[{
            RowBox[{"Polygon", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"Join", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "-", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"-", "k"}], ",", "k"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Reverse", "[", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "+", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{
                    RowBox[{"-", "2"}], "k"}], ",", 
                    RowBox[{"2", "k"}]}], "}"}]}], "]"}], "]"}]}], "]"}], 
              "\[IndentingNewLine]", "}"}], "]"}], "                   ", ",", 
            RowBox[{"gl22", "=", 
             RowBox[{"1.8", "-", "gl22"}]}]}], "    ", "]"}], "   ", ",", " ", 
          RowBox[{"Inset", "[", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<B\>\"", ",", "Black", ",", "Italic", ",", "Large"}], 
               "]"}], ",", 
              RowBox[{"FormatType", "\[Rule]", "StandardForm"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.4", ",", "0.8"}], "}"}]}], "  ", "]"}]}], "   ", 
         "                            ", "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"aAndb", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"GrayLevel", "[", "gl23", "]"}], "]"}], ",", 
          RowBox[{"Button", "[", 
           RowBox[{
            RowBox[{"Polygon", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"Join", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "-", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"-", "k"}], ",", "k"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "+", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"2", "k"}], ",", 
                    RowBox[{"4", "k"}]}], "}"}]}], "]"}]}], "]"}], 
              "\[IndentingNewLine]", "}"}], "]"}], "                   ", ",", 
            RowBox[{"gl23", "=", 
             RowBox[{"1.8", "-", "gl23"}]}]}], "    ", "]"}]}], 
         "                               ", "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"noneOfThem", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"GrayLevel", "[", "gl24", "]"}], "]"}], ",", 
          RowBox[{"Button", "[", 
           RowBox[{
            RowBox[{"Polygon", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "2"}], ",", 
                 RowBox[{"-", "2.3"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", 
                 RowBox[{"-", "2.3"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", "1.5"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "2"}], ",", "1.5"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "2"}], ",", 
                 RowBox[{"-", "2.3"}]}], "}"}]}], "\[IndentingNewLine]", 
              "}"}], "]"}], "                   ", ",", 
            RowBox[{"gl24", "=", 
             RowBox[{"1.8", "-", "gl24"}]}]}], "     ", "]"}], "            ",
           ",", "     ", 
          RowBox[{"Inset", "[", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<U\>\"", ",", "Black", ",", "Italic", ",", "Large"}], 
               "]"}], ",", 
              RowBox[{"FormatType", "\[Rule]", "StandardForm"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"2.2", ",", "1.4"}], "}"}]}], "  ", "]"}]}], "   ", 
         "                   ", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Pane", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Show", "[", 
             RowBox[{
             "noneOfThem", ",", "aOnly", ",", "bOnly", ",", "aAndb", ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"540", ",", "300"}], "}"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", "\"\<\>\"", ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
             "setNot", ",", "setNotations", ",", "\[IndentingNewLine]", 
              RowBox[{"Invisible", "[", "setNotations", "]"}]}], "]"}]}], 
           "}"}], ",", 
          RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"540", ",", "460"}], "}"}]}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", "3",
      ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"expList", "=", 
       RowBox[{"{", 
        RowBox[{
        "exp1", ",", "exp2", ",", "exp3", ",", "exp4", ",", "exp5", ",", 
         "exp6", ",", "exp7", ",", "exp8"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"glList", "=", 
       RowBox[{"{", 
        RowBox[{
        "gl1", ",", "gl2", ",", "gl3", ",", "gl4", ",", "gl5", ",", "gl6", 
         ",", "gl7", ",", "gl8"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"expParts", "=", 
       RowBox[{"Pick", "[", 
        RowBox[{"expList", ",", "glList", ",", "0.8"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"setStringDNF", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"ToUpperCase", "[", 
          RowBox[{"ToString", "[", 
           RowBox[{"BooleanMinimize", "[", 
            RowBox[{
             RowBox[{"Or", "@@", "expParts"}], ",", "\"\<DNF\>\""}], "]"}], 
           "]"}], "]"}], ",", "\[IndentingNewLine]", "replacementsList"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newSetStringsDNF", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"StringCases", "[", 
          RowBox[{"setStringDNF", ",", 
           RowBox[{"\"\<!(\>\"", "~~", "__", "~~", "\"\<)\>\""}], ",", 
           RowBox[{"Overlaps", "\[Rule]", "All"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"StringCount", "[", 
            RowBox[{"#", ",", "\"\<(\>\""}], "]"}], "\[Equal]", "1"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newStringsDNF", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"newSetStringsDNF", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<!(\>\"", "\[Rule]", "\"\<(\>\""}], ",", 
           RowBox[{
           "\"\<)\>\"", "\[Rule]", 
            "\"\<\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)\>\""}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"setStringFinalDNF", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"setStringDNF", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"newSetStringsDNF", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
            RowBox[{"newStringsDNF", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "newSetStringsDNF", "]"}]}], "}"}]}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"setStringCNF", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"ToUpperCase", "[", 
          RowBox[{"ToString", "[", 
           RowBox[{"BooleanMinimize", "[", 
            RowBox[{
             RowBox[{"Or", "@@", "expParts"}], ",", "\"\<CNF\>\""}], "]"}], 
           "]"}], "]"}], ",", "\[IndentingNewLine]", "replacementsList"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newSetStringsCNF", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"StringCases", "[", 
          RowBox[{"setStringCNF", ",", 
           RowBox[{"\"\<!(\>\"", "~~", "__", "~~", "\"\<)\>\""}], ",", 
           RowBox[{"Overlaps", "\[Rule]", "All"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"StringCount", "[", 
            RowBox[{"#", ",", "\"\<(\>\""}], "]"}], "\[Equal]", "1"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newStringsCNF", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"newSetStringsCNF", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<!(\>\"", "\[Rule]", "\"\<(\>\""}], ",", 
           RowBox[{
           "\"\<)\>\"", "\[Rule]", 
            "\"\<\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)\>\""}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"setStringFinalCNF", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"setStringCNF", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"newSetStringsCNF", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
            RowBox[{"newStringsCNF", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "newSetStringsCNF", "]"}]}], "}"}]}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"setStringOR", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"ToUpperCase", "[", 
          RowBox[{"ToString", "[", 
           RowBox[{"BooleanMinimize", "[", 
            RowBox[{
             RowBox[{"Or", "@@", "expParts"}], ",", "\"\<OR\>\""}], "]"}], 
           "]"}], "]"}], ",", "\[IndentingNewLine]", "replacementsList"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newSetStringsOR", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"StringCases", "[", 
          RowBox[{"setStringOR", ",", 
           RowBox[{"\"\<!(\>\"", "~~", "__", "~~", "\"\<)\>\""}], ",", 
           RowBox[{"Overlaps", "\[Rule]", "All"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"StringCount", "[", 
            RowBox[{"#", ",", "\"\<(\>\""}], "]"}], "\[Equal]", "1"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newStringsOR", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"newSetStringsOR", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<!(\>\"", "\[Rule]", "\"\<(\>\""}], ",", 
           RowBox[{
           "\"\<)\>\"", "\[Rule]", 
            "\"\<\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)\>\""}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"setStringFinalOR", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"setStringOR", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"newSetStringsOR", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
            RowBox[{"newStringsOR", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "newSetStringsOR", "]"}]}], "}"}]}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"setStringAND", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"ToUpperCase", "[", 
          RowBox[{"ToString", "[", 
           RowBox[{"BooleanMinimize", "[", 
            RowBox[{
             RowBox[{"Or", "@@", "expParts"}], ",", "\"\<AND\>\""}], "]"}], 
           "]"}], "]"}], ",", "\[IndentingNewLine]", "replacementsList"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newSetStringsAND", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"StringCases", "[", 
          RowBox[{"setStringAND", ",", 
           RowBox[{"\"\<!(\>\"", "~~", "__", "~~", "\"\<)\>\""}], ",", 
           RowBox[{"Overlaps", "\[Rule]", "All"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"StringCount", "[", 
            RowBox[{"#", ",", "\"\<(\>\""}], "]"}], "\[Equal]", "1"}], 
          "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newStringsAND", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"newSetStringsAND", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<!(\>\"", "\[Rule]", "\"\<(\>\""}], ",", 
           RowBox[{
           "\"\<)\>\"", "\[Rule]", 
            "\"\<\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)\>\""}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"setStringFinalAND", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"setStringAND", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"newSetStringsAND", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
            RowBox[{"newStringsAND", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "newSetStringsAND", "]"}]}], "}"}]}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"setNotations", "=", 
       RowBox[{"Text", "@", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"TableForm", "[", 
           RowBox[{
            RowBox[{"DeleteDuplicates", "[", 
             RowBox[{"{", 
              RowBox[{
              "setStringFinalDNF", ",", "setStringFinalCNF", ",", 
               "setStringFinalOR", ",", "setStringFinalAND"}], "}"}], "]"}], 
            ",", 
            RowBox[{"TableSpacing", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"1.5", ",", "Automatic"}], "}"}]}]}], "]"}], ",", 
          "Italic", ",", "18"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"aOnly", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"GrayLevel", "[", "gl1", "]"}], "]"}], ",", 
          RowBox[{"Button", "[", 
           RowBox[{
            RowBox[{"Polygon", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"Join", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "-", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "k", ",", 
                    RowBox[{"4", "k"}]}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Reverse", "[", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}]}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"2", "k"}], ",", 
                    RowBox[{"3", "k"}]}], "}"}]}], "]"}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Reverse", "[", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "+", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"2", "k"}], ",", 
                    RowBox[{"3", "k"}]}], "}"}]}], "]"}], "]"}]}], "]"}], 
              "\[IndentingNewLine]", "}"}], "]"}], "                   ", ",", 
            RowBox[{"gl1", "=", 
             RowBox[{"1.8", "-", "gl1"}]}]}], "     ", "]"}], "   ", ",", 
          "   ", 
          RowBox[{"Inset", "[", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<A\>\"", ",", "Black", ",", "Italic", ",", "Large"}], 
               "]"}], ",", 
              RowBox[{"FormatType", "\[Rule]", "StandardForm"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.4"}], ",", "0.8"}], "}"}]}], "  ", "]"}]}], 
         "                          ", "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bOnly", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"GrayLevel", "[", "gl2", "]"}], "]"}], ",", 
          RowBox[{"Button", "[", 
           RowBox[{
            RowBox[{"Polygon", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"Join", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "-", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "0", ",", "k"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Reverse", "[", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "+", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"-", "k"}], ",", 
                    RowBox[{"2", "k"}]}], "}"}]}], "]"}], "]"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}]}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "0", ",", "k"}], "}"}]}], "]"}]}], "]"}],
               "\[IndentingNewLine]", "}"}], "]"}], "                  ", ",", 
            RowBox[{"gl2", "=", 
             RowBox[{"1.8", "-", "gl2"}]}]}], "     ", "]"}], "    ", ",", 
          " ", 
          RowBox[{"Inset", "[", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<B\>\"", ",", "Black", ",", "Italic", ",", "Large"}], 
               "]"}], ",", 
              RowBox[{"FormatType", "\[Rule]", "StandardForm"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.4", ",", "0.8"}], "}"}]}], "  ", "]"}]}], "   ", 
         "                           ", "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cOnly", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"GrayLevel", "[", "gl3", "]"}], "]"}], ",", 
          RowBox[{"Button", "[", 
           RowBox[{
            RowBox[{"Polygon", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"Join", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "-", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"4", "k"}], ",", 
                    RowBox[{"5", "k"}]}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "+", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"4", "k"}], ",", 
                    RowBox[{"5", "k"}]}], "}"}]}], "]"}], ",", 
                RowBox[{"Reverse", "[", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}]}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"3", "k"}], ",", 
                    RowBox[{"6", "k"}]}], "}"}]}], "]"}], "]"}]}], "]"}], 
              "\[IndentingNewLine]", "}"}], "]"}], "                  ", ",", 
            RowBox[{"gl3", "=", 
             RowBox[{"1.8", "-", "gl3"}]}]}], "     ", "]"}], "    ", ",", 
          " ", 
          RowBox[{"Inset", "[", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<C\>\"", ",", "Black", ",", "Italic", ",", "Large"}], 
               "]"}], ",", 
              RowBox[{"FormatType", "\[Rule]", "StandardForm"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.8", ",", 
              RowBox[{"-", "1.8"}]}], "}"}]}], "  ", "]"}]}], "   ", 
         "                          ", "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"aAndbOnly", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"GrayLevel", "[", "gl4", "]"}], "]"}], ",", 
          RowBox[{"Button", "[", 
           RowBox[{
            RowBox[{"Polygon", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"Join", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "-", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "0", ",", "k"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "+", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"2", "k"}], ",", 
                    RowBox[{"3", "k"}]}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Reverse", "[", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}]}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "k", ",", 
                    RowBox[{"2", "k"}]}], "}"}]}], "]"}], "]"}]}], "]"}], 
              "\[IndentingNewLine]", "}"}], "]"}], "                   ", ",", 
            RowBox[{"gl4", "=", 
             RowBox[{"1.8", "-", "gl4"}]}]}], "     ", "]"}]}], 
         "                           ", "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"aAndcOnly", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"GrayLevel", "[", "gl5", "]"}], "]"}], ",", 
          RowBox[{"Button", "[", 
           RowBox[{
            RowBox[{"Polygon", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"Join", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "-", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"4", "k"}], ",", 
                    RowBox[{"5", "k"}]}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Reverse", "[", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "+", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"3", "k"}], ",", 
                    RowBox[{"4", "k"}]}], "}"}]}], "]"}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}]}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"2", "k"}], ",", 
                    RowBox[{"3", "k"}]}], "}"}]}], "]"}]}], "]"}], 
              "\[IndentingNewLine]", "}"}], "]"}], "                 ", ",", 
            RowBox[{"gl5", "=", 
             RowBox[{"1.8", "-", "gl5"}]}]}], "     ", "]"}]}], 
         "                                 ", "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bAndcOnly", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"GrayLevel", "[", "gl6", "]"}], "]"}], ",", 
          RowBox[{"Button", "[", 
           RowBox[{
            RowBox[{"Polygon", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"Join", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "-", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"5", "k"}], ",", 
                    RowBox[{"6", "k"}]}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Reverse", "[", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}]}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "0", ",", "k"}], "}"}]}], "]"}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"Reverse", "[", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "+", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"4", "k"}], ",", 
                    RowBox[{"5", "k"}]}], "}"}]}], "]"}], "]"}]}], "]"}], 
              "\[IndentingNewLine]", "}"}], "]"}], 
            "                            ", ",", 
            RowBox[{"gl6", "=", 
             RowBox[{"1.8", "-", "gl6"}]}]}], "     ", "]"}]}], 
         "                             ", "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"abAndc", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"GrayLevel", "[", "gl7", "]"}], "]"}], ",", 
          RowBox[{"Button", "[", 
           RowBox[{
            RowBox[{"Polygon", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"Join", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "-", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"5", "k"}], ",", 
                    RowBox[{"6", "k"}]}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}]}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "k", ",", 
                    RowBox[{"2", "k"}]}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}], "+", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"Pi", "/", 
                    RowBox[{"(", 
                    RowBox[{"3", "k"}], ")"}]}], "i"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"3", "k"}], ",", 
                    RowBox[{"4", "k"}]}], "}"}]}], "]"}]}], "]"}], 
              "\[IndentingNewLine]", "}"}], "]"}], "    ", ",", 
            RowBox[{"gl7", "=", 
             RowBox[{"1.8", "-", "gl7"}]}]}], "     ", "]"}]}], "           ",
          "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"noneOfThem", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"GrayLevel", "[", "gl8", "]"}], "]"}], ",", 
          RowBox[{"Button", "[", 
           RowBox[{
            RowBox[{"Polygon", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "2"}], ",", 
                 RowBox[{"-", "2.3"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", 
                 RowBox[{"-", "2.3"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", "1.5"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "2"}], ",", "1.5"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "2"}], ",", 
                 RowBox[{"-", "2.3"}]}], "}"}]}], "\[IndentingNewLine]", 
              "}"}], "]"}], "                   ", ",", 
            RowBox[{"gl8", "=", 
             RowBox[{"1.8", "-", "gl8"}]}]}], "     ", "]"}], " ", ",", 
          "     ", 
          RowBox[{"Inset", "[", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<U\>\"", ",", "Black", ",", "Italic", ",", "Large"}], 
               "]"}], ",", 
              RowBox[{"FormatType", "\[Rule]", "StandardForm"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"2.2", ",", "1.4"}], "}"}]}], "  ", "]"}]}], 
         "                            ", "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Pane", "[", 
       RowBox[{
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Show", "[", 
             RowBox[{
             "noneOfThem", ",", "aOnly", ",", "bOnly", ",", "cOnly", ",", 
              "aAndbOnly", ",", "aAndcOnly", ",", "bAndcOnly", ",", "abAndc", 
              ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"540", ",", "300"}], "}"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", "\"\<\>\"", ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
             "setNot", ",", "setNotations", ",", "\[IndentingNewLine]", 
              RowBox[{"Invisible", "[", "setNotations", "]"}]}], "]"}]}], 
           "}"}], ",", 
          RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], " ", ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"540", ",", "460"}], "}"}]}]}], " ", "]"}]}]}], " ", "]"}], 
   ",", "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gl1", ",", "1"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gl2", ",", "1"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gl3", ",", "1"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gl4", ",", "1"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gl5", ",", "1"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gl6", ",", "1"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gl7", ",", "1"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gl8", ",", "1"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gl21", ",", "1"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gl22", ",", "1"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gl23", ",", "1"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gl24", ",", "1"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"num", ",", "2", ",", "\"\<number of sets\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "RadioButtonBar"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"setNot", ",", "False", ",", "\"\<show set notation\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"AutorunSequencing", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"13", ",", "14"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"TrackedSymbols", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Initialization", "\[RuleDelayed]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"k", "=", "12"}], ";", "\[IndentingNewLine]", 
      RowBox[{"exp1", "=", 
       RowBox[{"a", "&&", 
        RowBox[{"!", "b"}], "&&", 
        RowBox[{"!", "c"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"exp2", "=", 
       RowBox[{"b", "&&", 
        RowBox[{"!", "a"}], "&&", 
        RowBox[{"!", "c"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"exp3", "=", 
       RowBox[{"c", "&&", 
        RowBox[{"!", "a"}], "&&", 
        RowBox[{"!", "b"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"exp4", "=", 
       RowBox[{"a", "&&", "b", "&&", 
        RowBox[{"!", "c"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"exp5", "=", 
       RowBox[{"a", "&&", "c", "&&", 
        RowBox[{"!", "b"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"exp6", "=", 
       RowBox[{"b", "&&", "c", "&&", 
        RowBox[{"!", "a"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"exp7", "=", 
       RowBox[{"a", "&&", "b", "&&", "c"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"exp8", "=", 
       RowBox[{
        RowBox[{"!", "a"}], "&&", 
        RowBox[{"!", "b"}], "&&", 
        RowBox[{"!", "c"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"exp21", "=", 
       RowBox[{"a", "&&", 
        RowBox[{"!", "b"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"exp22", "=", 
       RowBox[{"b", "&&", 
        RowBox[{"!", "a"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"exp23", "=", 
       RowBox[{"a", "&&", "b"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"exp24", "=", 
       RowBox[{
        RowBox[{"!", "a"}], "&&", 
        RowBox[{"!", "b"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"replacementsList", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<&&\>\"", "\[Rule]", "\"\<\[Intersection]\>\""}], ",", 
         RowBox[{"\"\<||\>\"", "->", "\"\<\[Union]\>\""}], ",", 
         RowBox[{
         "\"\<!A\>\"", "\[Rule]", 
          "\"\<\!\(\*SuperscriptBox[\(A\), \(\[Prime]\)]\)\>\""}], ",", 
         RowBox[{
         "\"\<!B\>\"", "\[Rule]", 
          "\"\<\!\(\*SuperscriptBox[\(B\), \(\[Prime]\)]\)\>\""}], ",", 
         RowBox[{
         "\"\<!C\>\"", "\[Rule]", 
          "\"\<\!\(\*SuperscriptBox[\(C\), \(\[Prime]\)]\)\>\""}], ",", 
         RowBox[{"\"\<FALSE\>\"", "\[Rule]", "\"\<\[EmptySet]\>\""}], ",", 
         RowBox[{"\"\<TRUE\>\"", "\[Rule]", "\"\<U\>\""}]}], "}"}]}]}], 
     ")"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{
  3.35696210375764*^9, 3.48767727909375*^9, {3.48767741590625*^9, 
   3.487677431203125*^9}, {3.4876776370625*^9, 3.48767763959375*^9}, 
   3.4876900332741013`*^9, 3.4876900728209767`*^9, {3.4876901202116013`*^9, 
   3.4876901506491013`*^9}, {3.4876905361959767`*^9, 
   3.4876905393209767`*^9}, {3.488128635953189*^9, 3.4881286511127048`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`gl1$$ = 1, $CellContext`gl2$$ = 
    1, $CellContext`gl21$$ = 1, $CellContext`gl22$$ = 1, $CellContext`gl23$$ =
     1, $CellContext`gl24$$ = 1, $CellContext`gl3$$ = 1, $CellContext`gl4$$ = 
    1, $CellContext`gl5$$ = 1, $CellContext`gl6$$ = 1, $CellContext`gl7$$ = 
    1, $CellContext`gl8$$ = 1, $CellContext`num$$ = 3, $CellContext`setNot$$ =
     False, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`gl1$$], 1}}, {{
       Hold[$CellContext`gl2$$], 1}}, {{
       Hold[$CellContext`gl3$$], 1}}, {{
       Hold[$CellContext`gl4$$], 1}}, {{
       Hold[$CellContext`gl5$$], 1}}, {{
       Hold[$CellContext`gl6$$], 1}}, {{
       Hold[$CellContext`gl7$$], 1}}, {{
       Hold[$CellContext`gl8$$], 1}}, {{
       Hold[$CellContext`gl21$$], 1}}, {{
       Hold[$CellContext`gl22$$], 1}}, {{
       Hold[$CellContext`gl23$$], 1}}, {{
       Hold[$CellContext`gl24$$], 1}}, {{
       Hold[$CellContext`num$$], 2, "number of sets"}, {2, 3}}, {{
       Hold[$CellContext`setNot$$], False, "show set notation"}, {
      True, False}}}, Typeset`size$$ = {540., {226., 234.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`num$3169$$ = False, $CellContext`setNot$3170$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`gl1$$ = 1, $CellContext`gl2$$ = 
        1, $CellContext`gl21$$ = 1, $CellContext`gl22$$ = 
        1, $CellContext`gl23$$ = 1, $CellContext`gl24$$ = 
        1, $CellContext`gl3$$ = 1, $CellContext`gl4$$ = 1, $CellContext`gl5$$ = 
        1, $CellContext`gl6$$ = 1, $CellContext`gl7$$ = 1, $CellContext`gl8$$ = 
        1, $CellContext`num$$ = 2, $CellContext`setNot$$ = False}, 
      "ControllerVariables" :> {
        Hold[$CellContext`num$$, $CellContext`num$3169$$, False], 
        Hold[$CellContext`setNot$$, $CellContext`setNot$3170$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Switch[$CellContext`num$$, 
        2, $CellContext`expList = {$CellContext`exp21, $CellContext`exp22, \
$CellContext`exp23, $CellContext`exp24}; $CellContext`glList = \
{$CellContext`gl21$$, $CellContext`gl22$$, $CellContext`gl23$$, \
$CellContext`gl24$$}; $CellContext`expParts = 
         Pick[$CellContext`expList, $CellContext`glList, 
           0.8]; $CellContext`setStringDNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "DNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsDNF = Select[
           StringCases[$CellContext`setStringDNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsDNF = 
         StringReplace[$CellContext`newSetStringsDNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalDNF = StringReplace[$CellContext`setStringDNF, 
           Table[
           Part[$CellContext`newSetStringsDNF, $CellContext`i] -> 
            Part[$CellContext`newStringsDNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsDNF]}]]; \
$CellContext`setStringCNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "CNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsCNF = Select[
           StringCases[$CellContext`setStringCNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsCNF = 
         StringReplace[$CellContext`newSetStringsCNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalCNF = StringReplace[$CellContext`setStringCNF, 
           Table[
           Part[$CellContext`newSetStringsCNF, $CellContext`i] -> 
            Part[$CellContext`newStringsCNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsCNF]}]]; \
$CellContext`setStringOR = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "OR"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsOR = Select[
           StringCases[$CellContext`setStringOR, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsOR = 
         StringReplace[$CellContext`newSetStringsOR, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalOR = StringReplace[$CellContext`setStringOR, 
           Table[
           Part[$CellContext`newSetStringsOR, $CellContext`i] -> 
            Part[$CellContext`newStringsOR, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsOR]}]]; \
$CellContext`setStringAND = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "AND"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsAND = Select[
           StringCases[$CellContext`setStringAND, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsAND = 
         StringReplace[$CellContext`newSetStringsAND, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalAND = StringReplace[$CellContext`setStringAND, 
           Table[
           Part[$CellContext`newSetStringsAND, $CellContext`i] -> 
            Part[$CellContext`newStringsAND, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsAND]}]]; \
$CellContext`setNotations = Text[
           Style[
            TableForm[
             
             DeleteDuplicates[{$CellContext`setStringFinalDNF, \
$CellContext`setStringFinalCNF, $CellContext`setStringFinalOR, \
$CellContext`setStringFinalAND}], TableSpacing -> {1.5, Automatic}], Italic, 
            24]]; $CellContext`aOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl21$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
$CellContext`k, 5 $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   2 $CellContext`k, 
                   4 $CellContext`k}]]]}], $CellContext`gl21$$ = 
             1.8 - $CellContext`gl21$$], 
            Inset[
             Text[
              Style["A", Black, Italic, Large], FormatType -> 
              StandardForm], {-1.4, 0.8}]}]; $CellContext`bOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl22$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
-$CellContext`k, $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
(-2) $CellContext`k, 2 $CellContext`k}]]]}], $CellContext`gl22$$ = 
             1.8 - $CellContext`gl22$$], 
            Inset[
             Text[
              Style["B", Black, Italic, Large], FormatType -> StandardForm], {
             1.4, 0.8}]}]; $CellContext`aAndb = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl23$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
-$CellContext`k, $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  2 $CellContext`k, 
                  4 $CellContext`k}]]}], $CellContext`gl23$$ = 
             1.8 - $CellContext`gl23$$]}]; $CellContext`noneOfThem = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl24$$]], 
            Button[
             
             Polygon[{{-2, -2.3}, {2, -2.3}, {
               2, 1.5}, {-2, 1.5}, {-2, -2.3}}], $CellContext`gl24$$ = 
             1.8 - $CellContext`gl24$$], 
            Inset[
             Text[
              Style["U", Black, Italic, Large], FormatType -> StandardForm], {
             2.2, 1.4}]}]; Pane[
          Column[{
            
            Show[$CellContext`noneOfThem, $CellContext`aOnly, \
$CellContext`bOnly, $CellContext`aAndb, ImageSize -> {540, 300}], "", 
            If[$CellContext`setNot$$, $CellContext`setNotations, 
             Invisible[$CellContext`setNotations]]}, Alignment -> Center], 
          ImageSize -> {540, 460}], 
        3, $CellContext`expList = {$CellContext`exp1, $CellContext`exp2, \
$CellContext`exp3, $CellContext`exp4, $CellContext`exp5, $CellContext`exp6, \
$CellContext`exp7, $CellContext`exp8}; $CellContext`glList = \
{$CellContext`gl1$$, $CellContext`gl2$$, $CellContext`gl3$$, \
$CellContext`gl4$$, $CellContext`gl5$$, $CellContext`gl6$$, \
$CellContext`gl7$$, $CellContext`gl8$$}; $CellContext`expParts = 
         Pick[$CellContext`expList, $CellContext`glList, 
           0.8]; $CellContext`setStringDNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "DNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsDNF = Select[
           StringCases[$CellContext`setStringDNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsDNF = 
         StringReplace[$CellContext`newSetStringsDNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalDNF = StringReplace[$CellContext`setStringDNF, 
           Table[
           Part[$CellContext`newSetStringsDNF, $CellContext`i] -> 
            Part[$CellContext`newStringsDNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsDNF]}]]; \
$CellContext`setStringCNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "CNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsCNF = Select[
           StringCases[$CellContext`setStringCNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsCNF = 
         StringReplace[$CellContext`newSetStringsCNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalCNF = StringReplace[$CellContext`setStringCNF, 
           Table[
           Part[$CellContext`newSetStringsCNF, $CellContext`i] -> 
            Part[$CellContext`newStringsCNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsCNF]}]]; \
$CellContext`setStringOR = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "OR"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsOR = Select[
           StringCases[$CellContext`setStringOR, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsOR = 
         StringReplace[$CellContext`newSetStringsOR, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalOR = StringReplace[$CellContext`setStringOR, 
           Table[
           Part[$CellContext`newSetStringsOR, $CellContext`i] -> 
            Part[$CellContext`newStringsOR, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsOR]}]]; \
$CellContext`setStringAND = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "AND"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsAND = Select[
           StringCases[$CellContext`setStringAND, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsAND = 
         StringReplace[$CellContext`newSetStringsAND, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalAND = StringReplace[$CellContext`setStringAND, 
           Table[
           Part[$CellContext`newSetStringsAND, $CellContext`i] -> 
            Part[$CellContext`newStringsAND, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsAND]}]]; \
$CellContext`setNotations = Text[
           Style[
            TableForm[
             
             DeleteDuplicates[{$CellContext`setStringFinalDNF, \
$CellContext`setStringFinalCNF, $CellContext`setStringFinalOR, \
$CellContext`setStringFinalAND}], TableSpacing -> {1.5, Automatic}], Italic, 
            18]]; $CellContext`aOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl1$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
$CellContext`k, 4 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, 2 $CellContext`k, 3 $CellContext`k}]], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   2 $CellContext`k, 
                   3 $CellContext`k}]]]}], $CellContext`gl1$$ = 
             1.8 - $CellContext`gl1$$], 
            Inset[
             Text[
              Style["A", Black, Italic, Large], FormatType -> 
              StandardForm], {-1.4, 0.8}]}]; $CellContext`bOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl2$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  0, $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
-$CellContext`k, 2 $CellContext`k}]], 
                Table[{
                  Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                  Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                  2}, {$CellContext`i, 
                  0, $CellContext`k}]]}], $CellContext`gl2$$ = 
             1.8 - $CellContext`gl2$$], 
            Inset[
             Text[
              Style["B", Black, Italic, Large], FormatType -> StandardForm], {
             1.4, 0.8}]}]; $CellContext`cOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl3$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  4 $CellContext`k, 5 $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  4 $CellContext`k, 5 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, 3 $CellContext`k, 
                   6 $CellContext`k}]]]}], $CellContext`gl3$$ = 
             1.8 - $CellContext`gl3$$], 
            Inset[
             Text[
              Style["C", Black, Italic, Large], FormatType -> StandardForm], {
             0.8, -1.8}]}]; $CellContext`aAndbOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl4$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  0, $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  2 $CellContext`k, 3 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, $CellContext`k, 
                   2 $CellContext`k}]]]}], $CellContext`gl4$$ = 
             1.8 - $CellContext`gl4$$]}]; $CellContext`aAndcOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl5$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  4 $CellContext`k, 5 $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   3 $CellContext`k, 4 $CellContext`k}]], 
                Table[{
                  Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                  Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                  2}, {$CellContext`i, 2 $CellContext`k, 
                  3 $CellContext`k}]]}], $CellContext`gl5$$ = 
             1.8 - $CellContext`gl5$$]}]; $CellContext`bAndcOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl6$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  5 $CellContext`k, 6 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, 0, $CellContext`k}]], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   4 $CellContext`k, 
                   5 $CellContext`k}]]]}], $CellContext`gl6$$ = 
             1.8 - $CellContext`gl6$$]}]; $CellContext`abAndc = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl7$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  5 $CellContext`k, 6 $CellContext`k}], 
                Table[{
                  Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                  Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                  2}, {$CellContext`i, $CellContext`k, 2 $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  3 $CellContext`k, 4 $CellContext`k}]]}], $CellContext`gl7$$ = 
             1.8 - $CellContext`gl7$$]}]; $CellContext`noneOfThem = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl8$$]], 
            Button[
             
             Polygon[{{-2, -2.3}, {2, -2.3}, {
               2, 1.5}, {-2, 1.5}, {-2, -2.3}}], $CellContext`gl8$$ = 
             1.8 - $CellContext`gl8$$], 
            Inset[
             Text[
              Style["U", Black, Italic, Large], FormatType -> StandardForm], {
             2.2, 1.4}]}]; Pane[
          Column[{
            
            Show[$CellContext`noneOfThem, $CellContext`aOnly, \
$CellContext`bOnly, $CellContext`cOnly, $CellContext`aAndbOnly, \
$CellContext`aAndcOnly, $CellContext`bAndcOnly, $CellContext`abAndc, 
             ImageSize -> {540, 300}], "", 
            If[$CellContext`setNot$$, $CellContext`setNotations, 
             Invisible[$CellContext`setNotations]]}, Alignment -> Center], 
          ImageSize -> {540, 460}]], 
      "Specifications" :> {{{$CellContext`gl1$$, 1}, ControlType -> 
         None}, {{$CellContext`gl2$$, 1}, ControlType -> 
         None}, {{$CellContext`gl3$$, 1}, ControlType -> 
         None}, {{$CellContext`gl4$$, 1}, ControlType -> 
         None}, {{$CellContext`gl5$$, 1}, ControlType -> 
         None}, {{$CellContext`gl6$$, 1}, ControlType -> 
         None}, {{$CellContext`gl7$$, 1}, ControlType -> 
         None}, {{$CellContext`gl8$$, 1}, ControlType -> 
         None}, {{$CellContext`gl21$$, 1}, ControlType -> 
         None}, {{$CellContext`gl22$$, 1}, ControlType -> 
         None}, {{$CellContext`gl23$$, 1}, ControlType -> 
         None}, {{$CellContext`gl24$$, 1}, ControlType -> 
         None}, {{$CellContext`num$$, 2, "number of sets"}, {2, 3}, 
         ControlType -> 
         RadioButtonBar}, {{$CellContext`setNot$$, False, 
          "show set notation"}, {True, False}}}, 
      "Options" :> {AutorunSequencing -> {13, 14}, TrackedSymbols -> True}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{589., {287., 294.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`k = 12; $CellContext`exp1 = 
       And[$CellContext`a, 
         Not[$CellContext`b], 
         Not[$CellContext`c]]; $CellContext`exp2 = And[$CellContext`b, 
         Not[$CellContext`a], 
         Not[$CellContext`c]]; $CellContext`exp3 = And[$CellContext`c, 
         Not[$CellContext`a], 
         Not[$CellContext`b]]; $CellContext`exp4 = 
       And[$CellContext`a, $CellContext`b, 
         Not[$CellContext`c]]; $CellContext`exp5 = 
       And[$CellContext`a, $CellContext`c, 
         Not[$CellContext`b]]; $CellContext`exp6 = 
       And[$CellContext`b, $CellContext`c, 
         Not[$CellContext`a]]; $CellContext`exp7 = 
       And[$CellContext`a, $CellContext`b, $CellContext`c]; $CellContext`exp8 = 
       And[
         Not[$CellContext`a], 
         Not[$CellContext`b], 
         Not[$CellContext`c]]; $CellContext`exp21 = And[$CellContext`a, 
         Not[$CellContext`b]]; $CellContext`exp22 = And[$CellContext`b, 
         Not[$CellContext`a]]; $CellContext`exp23 = 
       And[$CellContext`a, $CellContext`b]; $CellContext`exp24 = And[
         Not[$CellContext`a], 
         Not[$CellContext`b]]; $CellContext`replacementsList = {
        "&&" -> "\[Intersection]", "||" -> "\[Union]", "!A" -> 
         "\!\(\*SuperscriptBox[\(A\), \(\[Prime]\)]\)", "!B" -> 
         "\!\(\*SuperscriptBox[\(B\), \(\[Prime]\)]\)", "!C" -> 
         "\!\(\*SuperscriptBox[\(C\), \(\[Prime]\)]\)", "FALSE" -> 
         "\[EmptySet]", "TRUE" -> "U"}); Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->83885949]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection"],

Cell["\<\
Click the various regions of the Venn diagram to shade or unshade them. When \
the \"show set notation\" checkbox is clicked, one or several different \
expressions for the shaded region are displayed.\
\>", "ManipulateCaption",
 CellChangeTimes->{
  3.35696210375764*^9, {3.48767771925*^9, 3.487677809140625*^9}, {
   3.4876907090084767`*^9, 3.4876907468053513`*^9}, {3.488030704943369*^9, 
   3.488030725527177*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`gl1$$ = 0.8, $CellContext`gl2$$ = 
    0.8, $CellContext`gl21$$ = 1, $CellContext`gl22$$ = 
    1, $CellContext`gl23$$ = 1, $CellContext`gl24$$ = 1, $CellContext`gl3$$ = 
    1, $CellContext`gl4$$ = 1, $CellContext`gl5$$ = 1, $CellContext`gl6$$ = 
    1, $CellContext`gl7$$ = 1, $CellContext`gl8$$ = 0.8, $CellContext`num$$ = 
    3, $CellContext`setNot$$ = True, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`gl1$$], 0.8}}, {{
       Hold[$CellContext`gl2$$], 0.8}}, {{
       Hold[$CellContext`gl3$$], 1}}, {{
       Hold[$CellContext`gl4$$], 1}}, {{
       Hold[$CellContext`gl5$$], 1}}, {{
       Hold[$CellContext`gl6$$], 1}}, {{
       Hold[$CellContext`gl7$$], 1}}, {{
       Hold[$CellContext`gl8$$], 0.8}}, {{
       Hold[$CellContext`gl21$$], 1}}, {{
       Hold[$CellContext`gl22$$], 1}}, {{
       Hold[$CellContext`gl23$$], 1}}, {{
       Hold[$CellContext`gl24$$], 1}}, {{
       Hold[$CellContext`num$$], 3, "number of sets"}, {2, 3}}, {{
       Hold[$CellContext`setNot$$], True, "show set notation"}, {
      True, False}}}, Typeset`size$$ = {540., {226., 234.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`num$3260$$ = False, $CellContext`setNot$3261$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`gl1$$ = 0.8, $CellContext`gl2$$ = 
        0.8, $CellContext`gl21$$ = 1, $CellContext`gl22$$ = 
        1, $CellContext`gl23$$ = 1, $CellContext`gl24$$ = 
        1, $CellContext`gl3$$ = 1, $CellContext`gl4$$ = 1, $CellContext`gl5$$ = 
        1, $CellContext`gl6$$ = 1, $CellContext`gl7$$ = 1, $CellContext`gl8$$ = 
        0.8, $CellContext`num$$ = 3, $CellContext`setNot$$ = True}, 
      "ControllerVariables" :> {
        Hold[$CellContext`num$$, $CellContext`num$3260$$, False], 
        Hold[$CellContext`setNot$$, $CellContext`setNot$3261$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Switch[$CellContext`num$$, 
        2, $CellContext`expList = {$CellContext`exp21, $CellContext`exp22, \
$CellContext`exp23, $CellContext`exp24}; $CellContext`glList = \
{$CellContext`gl21$$, $CellContext`gl22$$, $CellContext`gl23$$, \
$CellContext`gl24$$}; $CellContext`expParts = 
         Pick[$CellContext`expList, $CellContext`glList, 
           0.8]; $CellContext`setStringDNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "DNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsDNF = Select[
           StringCases[$CellContext`setStringDNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsDNF = 
         StringReplace[$CellContext`newSetStringsDNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalDNF = StringReplace[$CellContext`setStringDNF, 
           Table[
           Part[$CellContext`newSetStringsDNF, $CellContext`i] -> 
            Part[$CellContext`newStringsDNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsDNF]}]]; \
$CellContext`setStringCNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "CNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsCNF = Select[
           StringCases[$CellContext`setStringCNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsCNF = 
         StringReplace[$CellContext`newSetStringsCNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalCNF = StringReplace[$CellContext`setStringCNF, 
           Table[
           Part[$CellContext`newSetStringsCNF, $CellContext`i] -> 
            Part[$CellContext`newStringsCNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsCNF]}]]; \
$CellContext`setStringOR = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "OR"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsOR = Select[
           StringCases[$CellContext`setStringOR, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsOR = 
         StringReplace[$CellContext`newSetStringsOR, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalOR = StringReplace[$CellContext`setStringOR, 
           Table[
           Part[$CellContext`newSetStringsOR, $CellContext`i] -> 
            Part[$CellContext`newStringsOR, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsOR]}]]; \
$CellContext`setStringAND = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "AND"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsAND = Select[
           StringCases[$CellContext`setStringAND, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsAND = 
         StringReplace[$CellContext`newSetStringsAND, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalAND = StringReplace[$CellContext`setStringAND, 
           Table[
           Part[$CellContext`newSetStringsAND, $CellContext`i] -> 
            Part[$CellContext`newStringsAND, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsAND]}]]; \
$CellContext`setNotations = Text[
           Style[
            TableForm[
             
             DeleteDuplicates[{$CellContext`setStringFinalDNF, \
$CellContext`setStringFinalCNF, $CellContext`setStringFinalOR, \
$CellContext`setStringFinalAND}], TableSpacing -> {1.5, Automatic}], Italic, 
            24]]; $CellContext`aOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl21$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
$CellContext`k, 5 $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   2 $CellContext`k, 
                   4 $CellContext`k}]]]}], $CellContext`gl21$$ = 
             1.8 - $CellContext`gl21$$], 
            Inset[
             Text[
              Style["A", Black, Italic, Large], FormatType -> 
              StandardForm], {-1.4, 0.8}]}]; $CellContext`bOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl22$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
-$CellContext`k, $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
(-2) $CellContext`k, 2 $CellContext`k}]]]}], $CellContext`gl22$$ = 
             1.8 - $CellContext`gl22$$], 
            Inset[
             Text[
              Style["B", Black, Italic, Large], FormatType -> StandardForm], {
             1.4, 0.8}]}]; $CellContext`aAndb = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl23$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
-$CellContext`k, $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  2 $CellContext`k, 
                  4 $CellContext`k}]]}], $CellContext`gl23$$ = 
             1.8 - $CellContext`gl23$$]}]; $CellContext`noneOfThem = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl24$$]], 
            Button[
             
             Polygon[{{-2, -2.3}, {2, -2.3}, {
               2, 1.5}, {-2, 1.5}, {-2, -2.3}}], $CellContext`gl24$$ = 
             1.8 - $CellContext`gl24$$], 
            Inset[
             Text[
              Style["U", Black, Italic, Large], FormatType -> StandardForm], {
             2.2, 1.4}]}]; Pane[
          Column[{
            
            Show[$CellContext`noneOfThem, $CellContext`aOnly, \
$CellContext`bOnly, $CellContext`aAndb, ImageSize -> {540, 300}], "", 
            If[$CellContext`setNot$$, $CellContext`setNotations, 
             Invisible[$CellContext`setNotations]]}, Alignment -> Center], 
          ImageSize -> {540, 460}], 
        3, $CellContext`expList = {$CellContext`exp1, $CellContext`exp2, \
$CellContext`exp3, $CellContext`exp4, $CellContext`exp5, $CellContext`exp6, \
$CellContext`exp7, $CellContext`exp8}; $CellContext`glList = \
{$CellContext`gl1$$, $CellContext`gl2$$, $CellContext`gl3$$, \
$CellContext`gl4$$, $CellContext`gl5$$, $CellContext`gl6$$, \
$CellContext`gl7$$, $CellContext`gl8$$}; $CellContext`expParts = 
         Pick[$CellContext`expList, $CellContext`glList, 
           0.8]; $CellContext`setStringDNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "DNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsDNF = Select[
           StringCases[$CellContext`setStringDNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsDNF = 
         StringReplace[$CellContext`newSetStringsDNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalDNF = StringReplace[$CellContext`setStringDNF, 
           Table[
           Part[$CellContext`newSetStringsDNF, $CellContext`i] -> 
            Part[$CellContext`newStringsDNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsDNF]}]]; \
$CellContext`setStringCNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "CNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsCNF = Select[
           StringCases[$CellContext`setStringCNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsCNF = 
         StringReplace[$CellContext`newSetStringsCNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalCNF = StringReplace[$CellContext`setStringCNF, 
           Table[
           Part[$CellContext`newSetStringsCNF, $CellContext`i] -> 
            Part[$CellContext`newStringsCNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsCNF]}]]; \
$CellContext`setStringOR = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "OR"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsOR = Select[
           StringCases[$CellContext`setStringOR, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsOR = 
         StringReplace[$CellContext`newSetStringsOR, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalOR = StringReplace[$CellContext`setStringOR, 
           Table[
           Part[$CellContext`newSetStringsOR, $CellContext`i] -> 
            Part[$CellContext`newStringsOR, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsOR]}]]; \
$CellContext`setStringAND = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "AND"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsAND = Select[
           StringCases[$CellContext`setStringAND, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsAND = 
         StringReplace[$CellContext`newSetStringsAND, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalAND = StringReplace[$CellContext`setStringAND, 
           Table[
           Part[$CellContext`newSetStringsAND, $CellContext`i] -> 
            Part[$CellContext`newStringsAND, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsAND]}]]; \
$CellContext`setNotations = Text[
           Style[
            TableForm[
             
             DeleteDuplicates[{$CellContext`setStringFinalDNF, \
$CellContext`setStringFinalCNF, $CellContext`setStringFinalOR, \
$CellContext`setStringFinalAND}], TableSpacing -> {1.5, Automatic}], Italic, 
            18]]; $CellContext`aOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl1$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
$CellContext`k, 4 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, 2 $CellContext`k, 3 $CellContext`k}]], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   2 $CellContext`k, 
                   3 $CellContext`k}]]]}], $CellContext`gl1$$ = 
             1.8 - $CellContext`gl1$$], 
            Inset[
             Text[
              Style["A", Black, Italic, Large], FormatType -> 
              StandardForm], {-1.4, 0.8}]}]; $CellContext`bOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl2$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  0, $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
-$CellContext`k, 2 $CellContext`k}]], 
                Table[{
                  Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                  Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                  2}, {$CellContext`i, 
                  0, $CellContext`k}]]}], $CellContext`gl2$$ = 
             1.8 - $CellContext`gl2$$], 
            Inset[
             Text[
              Style["B", Black, Italic, Large], FormatType -> StandardForm], {
             1.4, 0.8}]}]; $CellContext`cOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl3$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  4 $CellContext`k, 5 $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  4 $CellContext`k, 5 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, 3 $CellContext`k, 
                   6 $CellContext`k}]]]}], $CellContext`gl3$$ = 
             1.8 - $CellContext`gl3$$], 
            Inset[
             Text[
              Style["C", Black, Italic, Large], FormatType -> StandardForm], {
             0.8, -1.8}]}]; $CellContext`aAndbOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl4$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  0, $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  2 $CellContext`k, 3 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, $CellContext`k, 
                   2 $CellContext`k}]]]}], $CellContext`gl4$$ = 
             1.8 - $CellContext`gl4$$]}]; $CellContext`aAndcOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl5$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  4 $CellContext`k, 5 $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   3 $CellContext`k, 4 $CellContext`k}]], 
                Table[{
                  Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                  Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                  2}, {$CellContext`i, 2 $CellContext`k, 
                  3 $CellContext`k}]]}], $CellContext`gl5$$ = 
             1.8 - $CellContext`gl5$$]}]; $CellContext`bAndcOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl6$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  5 $CellContext`k, 6 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, 0, $CellContext`k}]], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   4 $CellContext`k, 
                   5 $CellContext`k}]]]}], $CellContext`gl6$$ = 
             1.8 - $CellContext`gl6$$]}]; $CellContext`abAndc = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl7$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  5 $CellContext`k, 6 $CellContext`k}], 
                Table[{
                  Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                  Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                  2}, {$CellContext`i, $CellContext`k, 2 $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  3 $CellContext`k, 4 $CellContext`k}]]}], $CellContext`gl7$$ = 
             1.8 - $CellContext`gl7$$]}]; $CellContext`noneOfThem = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl8$$]], 
            Button[
             
             Polygon[{{-2, -2.3}, {2, -2.3}, {
               2, 1.5}, {-2, 1.5}, {-2, -2.3}}], $CellContext`gl8$$ = 
             1.8 - $CellContext`gl8$$], 
            Inset[
             Text[
              Style["U", Black, Italic, Large], FormatType -> StandardForm], {
             2.2, 1.4}]}]; Pane[
          Column[{
            
            Show[$CellContext`noneOfThem, $CellContext`aOnly, \
$CellContext`bOnly, $CellContext`cOnly, $CellContext`aAndbOnly, \
$CellContext`aAndcOnly, $CellContext`bAndcOnly, $CellContext`abAndc, 
             ImageSize -> {540, 300}], "", 
            If[$CellContext`setNot$$, $CellContext`setNotations, 
             Invisible[$CellContext`setNotations]]}, Alignment -> Center], 
          ImageSize -> {540, 460}]], 
      "Specifications" :> {{{$CellContext`gl1$$, 0.8}, ControlType -> 
         None}, {{$CellContext`gl2$$, 0.8}, ControlType -> 
         None}, {{$CellContext`gl3$$, 1}, ControlType -> 
         None}, {{$CellContext`gl4$$, 1}, ControlType -> 
         None}, {{$CellContext`gl5$$, 1}, ControlType -> 
         None}, {{$CellContext`gl6$$, 1}, ControlType -> 
         None}, {{$CellContext`gl7$$, 1}, ControlType -> 
         None}, {{$CellContext`gl8$$, 0.8}, ControlType -> 
         None}, {{$CellContext`gl21$$, 1}, ControlType -> 
         None}, {{$CellContext`gl22$$, 1}, ControlType -> 
         None}, {{$CellContext`gl23$$, 1}, ControlType -> 
         None}, {{$CellContext`gl24$$, 1}, ControlType -> 
         None}, {{$CellContext`num$$, 3, "number of sets"}, {2, 3}, 
         ControlType -> 
         RadioButtonBar}, {{$CellContext`setNot$$, True, 
          "show set notation"}, {True, False}}}, 
      "Options" :> {AutorunSequencing -> {13, 14}, TrackedSymbols -> True}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{589., {287., 294.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`k = 12; $CellContext`exp1 = 
       And[$CellContext`a, 
         Not[$CellContext`b], 
         Not[$CellContext`c]]; $CellContext`exp2 = And[$CellContext`b, 
         Not[$CellContext`a], 
         Not[$CellContext`c]]; $CellContext`exp3 = And[$CellContext`c, 
         Not[$CellContext`a], 
         Not[$CellContext`b]]; $CellContext`exp4 = 
       And[$CellContext`a, $CellContext`b, 
         Not[$CellContext`c]]; $CellContext`exp5 = 
       And[$CellContext`a, $CellContext`c, 
         Not[$CellContext`b]]; $CellContext`exp6 = 
       And[$CellContext`b, $CellContext`c, 
         Not[$CellContext`a]]; $CellContext`exp7 = 
       And[$CellContext`a, $CellContext`b, $CellContext`c]; $CellContext`exp8 = 
       And[
         Not[$CellContext`a], 
         Not[$CellContext`b], 
         Not[$CellContext`c]]; $CellContext`exp21 = And[$CellContext`a, 
         Not[$CellContext`b]]; $CellContext`exp22 = And[$CellContext`b, 
         Not[$CellContext`a]]; $CellContext`exp23 = 
       And[$CellContext`a, $CellContext`b]; $CellContext`exp24 = And[
         Not[$CellContext`a], 
         Not[$CellContext`b]]; $CellContext`replacementsList = {
        "&&" -> "\[Intersection]", "||" -> "\[Union]", "!A" -> 
         "\!\(\*SuperscriptBox[\(A\), \(\[Prime]\)]\)", "!B" -> 
         "\!\(\*SuperscriptBox[\(B\), \(\[Prime]\)]\)", "!C" -> 
         "\!\(\*SuperscriptBox[\(C\), \(\[Prime]\)]\)", "FALSE" -> 
         "\[EmptySet]", "TRUE" -> "U"}); Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->305496916]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`gl1$$ = 0.8, $CellContext`gl2$$ = 
    0.8, $CellContext`gl21$$ = 1, $CellContext`gl22$$ = 
    1, $CellContext`gl23$$ = 1, $CellContext`gl24$$ = 1, $CellContext`gl3$$ = 
    1., $CellContext`gl4$$ = 1., $CellContext`gl5$$ = 1., $CellContext`gl6$$ =
     1., $CellContext`gl7$$ = 1., $CellContext`gl8$$ = 
    0.8, $CellContext`num$$ = 3, $CellContext`setNot$$ = False, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`gl1$$], 0.8}}, {{
       Hold[$CellContext`gl2$$], 0.8}}, {{
       Hold[$CellContext`gl3$$], 1.}}, {{
       Hold[$CellContext`gl4$$], 1.}}, {{
       Hold[$CellContext`gl5$$], 1.}}, {{
       Hold[$CellContext`gl6$$], 1.}}, {{
       Hold[$CellContext`gl7$$], 1.}}, {{
       Hold[$CellContext`gl8$$], 0.8}}, {{
       Hold[$CellContext`gl21$$], 1}}, {{
       Hold[$CellContext`gl22$$], 1}}, {{
       Hold[$CellContext`gl23$$], 1}}, {{
       Hold[$CellContext`gl24$$], 1}}, {{
       Hold[$CellContext`num$$], 3, "number of sets"}, {2, 3}}, {{
       Hold[$CellContext`setNot$$], False, "show set notation"}, {
      True, False}}}, Typeset`size$$ = {540., {226., 234.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`num$3351$$ = False, $CellContext`setNot$3352$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`gl1$$ = 0.8, $CellContext`gl2$$ = 
        0.8, $CellContext`gl21$$ = 1, $CellContext`gl22$$ = 
        1, $CellContext`gl23$$ = 1, $CellContext`gl24$$ = 
        1, $CellContext`gl3$$ = 1., $CellContext`gl4$$ = 
        1., $CellContext`gl5$$ = 1., $CellContext`gl6$$ = 
        1., $CellContext`gl7$$ = 1., $CellContext`gl8$$ = 
        0.8, $CellContext`num$$ = 3, $CellContext`setNot$$ = False}, 
      "ControllerVariables" :> {
        Hold[$CellContext`num$$, $CellContext`num$3351$$, False], 
        Hold[$CellContext`setNot$$, $CellContext`setNot$3352$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Switch[$CellContext`num$$, 
        2, $CellContext`expList = {$CellContext`exp21, $CellContext`exp22, \
$CellContext`exp23, $CellContext`exp24}; $CellContext`glList = \
{$CellContext`gl21$$, $CellContext`gl22$$, $CellContext`gl23$$, \
$CellContext`gl24$$}; $CellContext`expParts = 
         Pick[$CellContext`expList, $CellContext`glList, 
           0.8]; $CellContext`setStringDNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "DNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsDNF = Select[
           StringCases[$CellContext`setStringDNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsDNF = 
         StringReplace[$CellContext`newSetStringsDNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalDNF = StringReplace[$CellContext`setStringDNF, 
           Table[
           Part[$CellContext`newSetStringsDNF, $CellContext`i] -> 
            Part[$CellContext`newStringsDNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsDNF]}]]; \
$CellContext`setStringCNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "CNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsCNF = Select[
           StringCases[$CellContext`setStringCNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsCNF = 
         StringReplace[$CellContext`newSetStringsCNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalCNF = StringReplace[$CellContext`setStringCNF, 
           Table[
           Part[$CellContext`newSetStringsCNF, $CellContext`i] -> 
            Part[$CellContext`newStringsCNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsCNF]}]]; \
$CellContext`setStringOR = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "OR"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsOR = Select[
           StringCases[$CellContext`setStringOR, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsOR = 
         StringReplace[$CellContext`newSetStringsOR, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalOR = StringReplace[$CellContext`setStringOR, 
           Table[
           Part[$CellContext`newSetStringsOR, $CellContext`i] -> 
            Part[$CellContext`newStringsOR, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsOR]}]]; \
$CellContext`setStringAND = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "AND"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsAND = Select[
           StringCases[$CellContext`setStringAND, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsAND = 
         StringReplace[$CellContext`newSetStringsAND, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalAND = StringReplace[$CellContext`setStringAND, 
           Table[
           Part[$CellContext`newSetStringsAND, $CellContext`i] -> 
            Part[$CellContext`newStringsAND, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsAND]}]]; \
$CellContext`setNotations = Text[
           Style[
            TableForm[
             
             DeleteDuplicates[{$CellContext`setStringFinalDNF, \
$CellContext`setStringFinalCNF, $CellContext`setStringFinalOR, \
$CellContext`setStringFinalAND}], TableSpacing -> {1.5, Automatic}], Italic, 
            24]]; $CellContext`aOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl21$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
$CellContext`k, 5 $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   2 $CellContext`k, 
                   4 $CellContext`k}]]]}], $CellContext`gl21$$ = 
             1.8 - $CellContext`gl21$$], 
            Inset[
             Text[
              Style["A", Black, Italic, Large], FormatType -> 
              StandardForm], {-1.4, 0.8}]}]; $CellContext`bOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl22$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
-$CellContext`k, $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
(-2) $CellContext`k, 2 $CellContext`k}]]]}], $CellContext`gl22$$ = 
             1.8 - $CellContext`gl22$$], 
            Inset[
             Text[
              Style["B", Black, Italic, Large], FormatType -> StandardForm], {
             1.4, 0.8}]}]; $CellContext`aAndb = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl23$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
-$CellContext`k, $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  2 $CellContext`k, 
                  4 $CellContext`k}]]}], $CellContext`gl23$$ = 
             1.8 - $CellContext`gl23$$]}]; $CellContext`noneOfThem = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl24$$]], 
            Button[
             
             Polygon[{{-2, -2.3}, {2, -2.3}, {
               2, 1.5}, {-2, 1.5}, {-2, -2.3}}], $CellContext`gl24$$ = 
             1.8 - $CellContext`gl24$$], 
            Inset[
             Text[
              Style["U", Black, Italic, Large], FormatType -> StandardForm], {
             2.2, 1.4}]}]; Pane[
          Column[{
            
            Show[$CellContext`noneOfThem, $CellContext`aOnly, \
$CellContext`bOnly, $CellContext`aAndb, ImageSize -> {540, 300}], "", 
            If[$CellContext`setNot$$, $CellContext`setNotations, 
             Invisible[$CellContext`setNotations]]}, Alignment -> Center], 
          ImageSize -> {540, 460}], 
        3, $CellContext`expList = {$CellContext`exp1, $CellContext`exp2, \
$CellContext`exp3, $CellContext`exp4, $CellContext`exp5, $CellContext`exp6, \
$CellContext`exp7, $CellContext`exp8}; $CellContext`glList = \
{$CellContext`gl1$$, $CellContext`gl2$$, $CellContext`gl3$$, \
$CellContext`gl4$$, $CellContext`gl5$$, $CellContext`gl6$$, \
$CellContext`gl7$$, $CellContext`gl8$$}; $CellContext`expParts = 
         Pick[$CellContext`expList, $CellContext`glList, 
           0.8]; $CellContext`setStringDNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "DNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsDNF = Select[
           StringCases[$CellContext`setStringDNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsDNF = 
         StringReplace[$CellContext`newSetStringsDNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalDNF = StringReplace[$CellContext`setStringDNF, 
           Table[
           Part[$CellContext`newSetStringsDNF, $CellContext`i] -> 
            Part[$CellContext`newStringsDNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsDNF]}]]; \
$CellContext`setStringCNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "CNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsCNF = Select[
           StringCases[$CellContext`setStringCNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsCNF = 
         StringReplace[$CellContext`newSetStringsCNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalCNF = StringReplace[$CellContext`setStringCNF, 
           Table[
           Part[$CellContext`newSetStringsCNF, $CellContext`i] -> 
            Part[$CellContext`newStringsCNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsCNF]}]]; \
$CellContext`setStringOR = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "OR"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsOR = Select[
           StringCases[$CellContext`setStringOR, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsOR = 
         StringReplace[$CellContext`newSetStringsOR, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalOR = StringReplace[$CellContext`setStringOR, 
           Table[
           Part[$CellContext`newSetStringsOR, $CellContext`i] -> 
            Part[$CellContext`newStringsOR, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsOR]}]]; \
$CellContext`setStringAND = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "AND"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsAND = Select[
           StringCases[$CellContext`setStringAND, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsAND = 
         StringReplace[$CellContext`newSetStringsAND, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalAND = StringReplace[$CellContext`setStringAND, 
           Table[
           Part[$CellContext`newSetStringsAND, $CellContext`i] -> 
            Part[$CellContext`newStringsAND, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsAND]}]]; \
$CellContext`setNotations = Text[
           Style[
            TableForm[
             
             DeleteDuplicates[{$CellContext`setStringFinalDNF, \
$CellContext`setStringFinalCNF, $CellContext`setStringFinalOR, \
$CellContext`setStringFinalAND}], TableSpacing -> {1.5, Automatic}], Italic, 
            18]]; $CellContext`aOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl1$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
$CellContext`k, 4 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, 2 $CellContext`k, 3 $CellContext`k}]], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   2 $CellContext`k, 
                   3 $CellContext`k}]]]}], $CellContext`gl1$$ = 
             1.8 - $CellContext`gl1$$], 
            Inset[
             Text[
              Style["A", Black, Italic, Large], FormatType -> 
              StandardForm], {-1.4, 0.8}]}]; $CellContext`bOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl2$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  0, $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
-$CellContext`k, 2 $CellContext`k}]], 
                Table[{
                  Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                  Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                  2}, {$CellContext`i, 
                  0, $CellContext`k}]]}], $CellContext`gl2$$ = 
             1.8 - $CellContext`gl2$$], 
            Inset[
             Text[
              Style["B", Black, Italic, Large], FormatType -> StandardForm], {
             1.4, 0.8}]}]; $CellContext`cOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl3$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  4 $CellContext`k, 5 $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  4 $CellContext`k, 5 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, 3 $CellContext`k, 
                   6 $CellContext`k}]]]}], $CellContext`gl3$$ = 
             1.8 - $CellContext`gl3$$], 
            Inset[
             Text[
              Style["C", Black, Italic, Large], FormatType -> StandardForm], {
             0.8, -1.8}]}]; $CellContext`aAndbOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl4$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  0, $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  2 $CellContext`k, 3 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, $CellContext`k, 
                   2 $CellContext`k}]]]}], $CellContext`gl4$$ = 
             1.8 - $CellContext`gl4$$]}]; $CellContext`aAndcOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl5$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  4 $CellContext`k, 5 $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   3 $CellContext`k, 4 $CellContext`k}]], 
                Table[{
                  Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                  Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                  2}, {$CellContext`i, 2 $CellContext`k, 
                  3 $CellContext`k}]]}], $CellContext`gl5$$ = 
             1.8 - $CellContext`gl5$$]}]; $CellContext`bAndcOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl6$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  5 $CellContext`k, 6 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, 0, $CellContext`k}]], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   4 $CellContext`k, 
                   5 $CellContext`k}]]]}], $CellContext`gl6$$ = 
             1.8 - $CellContext`gl6$$]}]; $CellContext`abAndc = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl7$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  5 $CellContext`k, 6 $CellContext`k}], 
                Table[{
                  Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                  Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                  2}, {$CellContext`i, $CellContext`k, 2 $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  3 $CellContext`k, 4 $CellContext`k}]]}], $CellContext`gl7$$ = 
             1.8 - $CellContext`gl7$$]}]; $CellContext`noneOfThem = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl8$$]], 
            Button[
             
             Polygon[{{-2, -2.3}, {2, -2.3}, {
               2, 1.5}, {-2, 1.5}, {-2, -2.3}}], $CellContext`gl8$$ = 
             1.8 - $CellContext`gl8$$], 
            Inset[
             Text[
              Style["U", Black, Italic, Large], FormatType -> StandardForm], {
             2.2, 1.4}]}]; Pane[
          Column[{
            
            Show[$CellContext`noneOfThem, $CellContext`aOnly, \
$CellContext`bOnly, $CellContext`cOnly, $CellContext`aAndbOnly, \
$CellContext`aAndcOnly, $CellContext`bAndcOnly, $CellContext`abAndc, 
             ImageSize -> {540, 300}], "", 
            If[$CellContext`setNot$$, $CellContext`setNotations, 
             Invisible[$CellContext`setNotations]]}, Alignment -> Center], 
          ImageSize -> {540, 460}]], 
      "Specifications" :> {{{$CellContext`gl1$$, 0.8}, ControlType -> 
         None}, {{$CellContext`gl2$$, 0.8}, ControlType -> 
         None}, {{$CellContext`gl3$$, 1.}, ControlType -> 
         None}, {{$CellContext`gl4$$, 1.}, ControlType -> 
         None}, {{$CellContext`gl5$$, 1.}, ControlType -> 
         None}, {{$CellContext`gl6$$, 1.}, ControlType -> 
         None}, {{$CellContext`gl7$$, 1.}, ControlType -> 
         None}, {{$CellContext`gl8$$, 0.8}, ControlType -> 
         None}, {{$CellContext`gl21$$, 1}, ControlType -> 
         None}, {{$CellContext`gl22$$, 1}, ControlType -> 
         None}, {{$CellContext`gl23$$, 1}, ControlType -> 
         None}, {{$CellContext`gl24$$, 1}, ControlType -> 
         None}, {{$CellContext`num$$, 3, "number of sets"}, {2, 3}, 
         ControlType -> 
         RadioButtonBar}, {{$CellContext`setNot$$, False, 
          "show set notation"}, {True, False}}}, 
      "Options" :> {AutorunSequencing -> {13, 14}, TrackedSymbols -> True}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{589., {287., 294.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`k = 12; $CellContext`exp1 = 
       And[$CellContext`a, 
         Not[$CellContext`b], 
         Not[$CellContext`c]]; $CellContext`exp2 = And[$CellContext`b, 
         Not[$CellContext`a], 
         Not[$CellContext`c]]; $CellContext`exp3 = And[$CellContext`c, 
         Not[$CellContext`a], 
         Not[$CellContext`b]]; $CellContext`exp4 = 
       And[$CellContext`a, $CellContext`b, 
         Not[$CellContext`c]]; $CellContext`exp5 = 
       And[$CellContext`a, $CellContext`c, 
         Not[$CellContext`b]]; $CellContext`exp6 = 
       And[$CellContext`b, $CellContext`c, 
         Not[$CellContext`a]]; $CellContext`exp7 = 
       And[$CellContext`a, $CellContext`b, $CellContext`c]; $CellContext`exp8 = 
       And[
         Not[$CellContext`a], 
         Not[$CellContext`b], 
         Not[$CellContext`c]]; $CellContext`exp21 = And[$CellContext`a, 
         Not[$CellContext`b]]; $CellContext`exp22 = And[$CellContext`b, 
         Not[$CellContext`a]]; $CellContext`exp23 = 
       And[$CellContext`a, $CellContext`b]; $CellContext`exp24 = And[
         Not[$CellContext`a], 
         Not[$CellContext`b]]; $CellContext`replacementsList = {
        "&&" -> "\[Intersection]", "||" -> "\[Union]", "!A" -> 
         "\!\(\*SuperscriptBox[\(A\), \(\[Prime]\)]\)", "!B" -> 
         "\!\(\*SuperscriptBox[\(B\), \(\[Prime]\)]\)", "!C" -> 
         "\!\(\*SuperscriptBox[\(C\), \(\[Prime]\)]\)", "FALSE" -> 
         "\[EmptySet]", "TRUE" -> "U"}); Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->5097055],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`gl1$$ = 1, $CellContext`gl2$$ = 
    1, $CellContext`gl21$$ = 0.8, $CellContext`gl22$$ = 
    1., $CellContext`gl23$$ = 1., $CellContext`gl24$$ = 
    1, $CellContext`gl3$$ = 1, $CellContext`gl4$$ = 1, $CellContext`gl5$$ = 
    1, $CellContext`gl6$$ = 1, $CellContext`gl7$$ = 1, $CellContext`gl8$$ = 
    1, $CellContext`num$$ = 2, $CellContext`setNot$$ = True, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`gl1$$], 1}}, {{
       Hold[$CellContext`gl2$$], 1}}, {{
       Hold[$CellContext`gl3$$], 1}}, {{
       Hold[$CellContext`gl4$$], 1}}, {{
       Hold[$CellContext`gl5$$], 1}}, {{
       Hold[$CellContext`gl6$$], 1}}, {{
       Hold[$CellContext`gl7$$], 1}}, {{
       Hold[$CellContext`gl8$$], 1}}, {{
       Hold[$CellContext`gl21$$], 0.8}}, {{
       Hold[$CellContext`gl22$$], 1.}}, {{
       Hold[$CellContext`gl23$$], 1.}}, {{
       Hold[$CellContext`gl24$$], 1}}, {{
       Hold[$CellContext`num$$], 2, "number of sets"}, {2, 3}}, {{
       Hold[$CellContext`setNot$$], True, "show set notation"}, {
      True, False}}}, Typeset`size$$ = {540., {227.5, 232.5}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`num$3442$$ = False, $CellContext`setNot$3443$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`gl1$$ = 1, $CellContext`gl2$$ = 
        1, $CellContext`gl21$$ = 0.8, $CellContext`gl22$$ = 
        1., $CellContext`gl23$$ = 1., $CellContext`gl24$$ = 
        1, $CellContext`gl3$$ = 1, $CellContext`gl4$$ = 1, $CellContext`gl5$$ = 
        1, $CellContext`gl6$$ = 1, $CellContext`gl7$$ = 1, $CellContext`gl8$$ = 
        1, $CellContext`num$$ = 2, $CellContext`setNot$$ = True}, 
      "ControllerVariables" :> {
        Hold[$CellContext`num$$, $CellContext`num$3442$$, False], 
        Hold[$CellContext`setNot$$, $CellContext`setNot$3443$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Switch[$CellContext`num$$, 
        2, $CellContext`expList = {$CellContext`exp21, $CellContext`exp22, \
$CellContext`exp23, $CellContext`exp24}; $CellContext`glList = \
{$CellContext`gl21$$, $CellContext`gl22$$, $CellContext`gl23$$, \
$CellContext`gl24$$}; $CellContext`expParts = 
         Pick[$CellContext`expList, $CellContext`glList, 
           0.8]; $CellContext`setStringDNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "DNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsDNF = Select[
           StringCases[$CellContext`setStringDNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsDNF = 
         StringReplace[$CellContext`newSetStringsDNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalDNF = StringReplace[$CellContext`setStringDNF, 
           Table[
           Part[$CellContext`newSetStringsDNF, $CellContext`i] -> 
            Part[$CellContext`newStringsDNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsDNF]}]]; \
$CellContext`setStringCNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "CNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsCNF = Select[
           StringCases[$CellContext`setStringCNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsCNF = 
         StringReplace[$CellContext`newSetStringsCNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalCNF = StringReplace[$CellContext`setStringCNF, 
           Table[
           Part[$CellContext`newSetStringsCNF, $CellContext`i] -> 
            Part[$CellContext`newStringsCNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsCNF]}]]; \
$CellContext`setStringOR = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "OR"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsOR = Select[
           StringCases[$CellContext`setStringOR, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsOR = 
         StringReplace[$CellContext`newSetStringsOR, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalOR = StringReplace[$CellContext`setStringOR, 
           Table[
           Part[$CellContext`newSetStringsOR, $CellContext`i] -> 
            Part[$CellContext`newStringsOR, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsOR]}]]; \
$CellContext`setStringAND = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "AND"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsAND = Select[
           StringCases[$CellContext`setStringAND, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsAND = 
         StringReplace[$CellContext`newSetStringsAND, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalAND = StringReplace[$CellContext`setStringAND, 
           Table[
           Part[$CellContext`newSetStringsAND, $CellContext`i] -> 
            Part[$CellContext`newStringsAND, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsAND]}]]; \
$CellContext`setNotations = Text[
           Style[
            TableForm[
             
             DeleteDuplicates[{$CellContext`setStringFinalDNF, \
$CellContext`setStringFinalCNF, $CellContext`setStringFinalOR, \
$CellContext`setStringFinalAND}], TableSpacing -> {1.5, Automatic}], Italic, 
            24]]; $CellContext`aOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl21$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
$CellContext`k, 5 $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   2 $CellContext`k, 
                   4 $CellContext`k}]]]}], $CellContext`gl21$$ = 
             1.8 - $CellContext`gl21$$], 
            Inset[
             Text[
              Style["A", Black, Italic, Large], FormatType -> 
              StandardForm], {-1.4, 0.8}]}]; $CellContext`bOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl22$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
-$CellContext`k, $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
(-2) $CellContext`k, 2 $CellContext`k}]]]}], $CellContext`gl22$$ = 
             1.8 - $CellContext`gl22$$], 
            Inset[
             Text[
              Style["B", Black, Italic, Large], FormatType -> StandardForm], {
             1.4, 0.8}]}]; $CellContext`aAndb = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl23$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
-$CellContext`k, $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  2 $CellContext`k, 
                  4 $CellContext`k}]]}], $CellContext`gl23$$ = 
             1.8 - $CellContext`gl23$$]}]; $CellContext`noneOfThem = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl24$$]], 
            Button[
             
             Polygon[{{-2, -2.3}, {2, -2.3}, {
               2, 1.5}, {-2, 1.5}, {-2, -2.3}}], $CellContext`gl24$$ = 
             1.8 - $CellContext`gl24$$], 
            Inset[
             Text[
              Style["U", Black, Italic, Large], FormatType -> StandardForm], {
             2.2, 1.4}]}]; Pane[
          Column[{
            
            Show[$CellContext`noneOfThem, $CellContext`aOnly, \
$CellContext`bOnly, $CellContext`aAndb, ImageSize -> {540, 300}], "", 
            If[$CellContext`setNot$$, $CellContext`setNotations, 
             Invisible[$CellContext`setNotations]]}, Alignment -> Center], 
          ImageSize -> {540, 460}], 
        3, $CellContext`expList = {$CellContext`exp1, $CellContext`exp2, \
$CellContext`exp3, $CellContext`exp4, $CellContext`exp5, $CellContext`exp6, \
$CellContext`exp7, $CellContext`exp8}; $CellContext`glList = \
{$CellContext`gl1$$, $CellContext`gl2$$, $CellContext`gl3$$, \
$CellContext`gl4$$, $CellContext`gl5$$, $CellContext`gl6$$, \
$CellContext`gl7$$, $CellContext`gl8$$}; $CellContext`expParts = 
         Pick[$CellContext`expList, $CellContext`glList, 
           0.8]; $CellContext`setStringDNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "DNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsDNF = Select[
           StringCases[$CellContext`setStringDNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsDNF = 
         StringReplace[$CellContext`newSetStringsDNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalDNF = StringReplace[$CellContext`setStringDNF, 
           Table[
           Part[$CellContext`newSetStringsDNF, $CellContext`i] -> 
            Part[$CellContext`newStringsDNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsDNF]}]]; \
$CellContext`setStringCNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "CNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsCNF = Select[
           StringCases[$CellContext`setStringCNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsCNF = 
         StringReplace[$CellContext`newSetStringsCNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalCNF = StringReplace[$CellContext`setStringCNF, 
           Table[
           Part[$CellContext`newSetStringsCNF, $CellContext`i] -> 
            Part[$CellContext`newStringsCNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsCNF]}]]; \
$CellContext`setStringOR = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "OR"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsOR = Select[
           StringCases[$CellContext`setStringOR, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsOR = 
         StringReplace[$CellContext`newSetStringsOR, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalOR = StringReplace[$CellContext`setStringOR, 
           Table[
           Part[$CellContext`newSetStringsOR, $CellContext`i] -> 
            Part[$CellContext`newStringsOR, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsOR]}]]; \
$CellContext`setStringAND = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "AND"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsAND = Select[
           StringCases[$CellContext`setStringAND, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsAND = 
         StringReplace[$CellContext`newSetStringsAND, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalAND = StringReplace[$CellContext`setStringAND, 
           Table[
           Part[$CellContext`newSetStringsAND, $CellContext`i] -> 
            Part[$CellContext`newStringsAND, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsAND]}]]; \
$CellContext`setNotations = Text[
           Style[
            TableForm[
             
             DeleteDuplicates[{$CellContext`setStringFinalDNF, \
$CellContext`setStringFinalCNF, $CellContext`setStringFinalOR, \
$CellContext`setStringFinalAND}], TableSpacing -> {1.5, Automatic}], Italic, 
            18]]; $CellContext`aOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl1$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
$CellContext`k, 4 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, 2 $CellContext`k, 3 $CellContext`k}]], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   2 $CellContext`k, 
                   3 $CellContext`k}]]]}], $CellContext`gl1$$ = 
             1.8 - $CellContext`gl1$$], 
            Inset[
             Text[
              Style["A", Black, Italic, Large], FormatType -> 
              StandardForm], {-1.4, 0.8}]}]; $CellContext`bOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl2$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  0, $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
-$CellContext`k, 2 $CellContext`k}]], 
                Table[{
                  Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                  Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                  2}, {$CellContext`i, 
                  0, $CellContext`k}]]}], $CellContext`gl2$$ = 
             1.8 - $CellContext`gl2$$], 
            Inset[
             Text[
              Style["B", Black, Italic, Large], FormatType -> StandardForm], {
             1.4, 0.8}]}]; $CellContext`cOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl3$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  4 $CellContext`k, 5 $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  4 $CellContext`k, 5 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, 3 $CellContext`k, 
                   6 $CellContext`k}]]]}], $CellContext`gl3$$ = 
             1.8 - $CellContext`gl3$$], 
            Inset[
             Text[
              Style["C", Black, Italic, Large], FormatType -> StandardForm], {
             0.8, -1.8}]}]; $CellContext`aAndbOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl4$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  0, $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  2 $CellContext`k, 3 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, $CellContext`k, 
                   2 $CellContext`k}]]]}], $CellContext`gl4$$ = 
             1.8 - $CellContext`gl4$$]}]; $CellContext`aAndcOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl5$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  4 $CellContext`k, 5 $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   3 $CellContext`k, 4 $CellContext`k}]], 
                Table[{
                  Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                  Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                  2}, {$CellContext`i, 2 $CellContext`k, 
                  3 $CellContext`k}]]}], $CellContext`gl5$$ = 
             1.8 - $CellContext`gl5$$]}]; $CellContext`bAndcOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl6$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  5 $CellContext`k, 6 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, 0, $CellContext`k}]], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   4 $CellContext`k, 
                   5 $CellContext`k}]]]}], $CellContext`gl6$$ = 
             1.8 - $CellContext`gl6$$]}]; $CellContext`abAndc = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl7$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  5 $CellContext`k, 6 $CellContext`k}], 
                Table[{
                  Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                  Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                  2}, {$CellContext`i, $CellContext`k, 2 $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  3 $CellContext`k, 4 $CellContext`k}]]}], $CellContext`gl7$$ = 
             1.8 - $CellContext`gl7$$]}]; $CellContext`noneOfThem = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl8$$]], 
            Button[
             
             Polygon[{{-2, -2.3}, {2, -2.3}, {
               2, 1.5}, {-2, 1.5}, {-2, -2.3}}], $CellContext`gl8$$ = 
             1.8 - $CellContext`gl8$$], 
            Inset[
             Text[
              Style["U", Black, Italic, Large], FormatType -> StandardForm], {
             2.2, 1.4}]}]; Pane[
          Column[{
            
            Show[$CellContext`noneOfThem, $CellContext`aOnly, \
$CellContext`bOnly, $CellContext`cOnly, $CellContext`aAndbOnly, \
$CellContext`aAndcOnly, $CellContext`bAndcOnly, $CellContext`abAndc, 
             ImageSize -> {540, 300}], "", 
            If[$CellContext`setNot$$, $CellContext`setNotations, 
             Invisible[$CellContext`setNotations]]}, Alignment -> Center], 
          ImageSize -> {540, 460}]], 
      "Specifications" :> {{{$CellContext`gl1$$, 1}, ControlType -> 
         None}, {{$CellContext`gl2$$, 1}, ControlType -> 
         None}, {{$CellContext`gl3$$, 1}, ControlType -> 
         None}, {{$CellContext`gl4$$, 1}, ControlType -> 
         None}, {{$CellContext`gl5$$, 1}, ControlType -> 
         None}, {{$CellContext`gl6$$, 1}, ControlType -> 
         None}, {{$CellContext`gl7$$, 1}, ControlType -> 
         None}, {{$CellContext`gl8$$, 1}, ControlType -> 
         None}, {{$CellContext`gl21$$, 0.8}, ControlType -> 
         None}, {{$CellContext`gl22$$, 1.}, ControlType -> 
         None}, {{$CellContext`gl23$$, 1.}, ControlType -> 
         None}, {{$CellContext`gl24$$, 1}, ControlType -> 
         None}, {{$CellContext`num$$, 2, "number of sets"}, {2, 3}, 
         ControlType -> 
         RadioButtonBar}, {{$CellContext`setNot$$, True, 
          "show set notation"}, {True, False}}}, 
      "Options" :> {AutorunSequencing -> {13, 14}, TrackedSymbols -> True}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{589., {287., 294.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`k = 12; $CellContext`exp1 = 
       And[$CellContext`a, 
         Not[$CellContext`b], 
         Not[$CellContext`c]]; $CellContext`exp2 = And[$CellContext`b, 
         Not[$CellContext`a], 
         Not[$CellContext`c]]; $CellContext`exp3 = And[$CellContext`c, 
         Not[$CellContext`a], 
         Not[$CellContext`b]]; $CellContext`exp4 = 
       And[$CellContext`a, $CellContext`b, 
         Not[$CellContext`c]]; $CellContext`exp5 = 
       And[$CellContext`a, $CellContext`c, 
         Not[$CellContext`b]]; $CellContext`exp6 = 
       And[$CellContext`b, $CellContext`c, 
         Not[$CellContext`a]]; $CellContext`exp7 = 
       And[$CellContext`a, $CellContext`b, $CellContext`c]; $CellContext`exp8 = 
       And[
         Not[$CellContext`a], 
         Not[$CellContext`b], 
         Not[$CellContext`c]]; $CellContext`exp21 = And[$CellContext`a, 
         Not[$CellContext`b]]; $CellContext`exp22 = And[$CellContext`b, 
         Not[$CellContext`a]]; $CellContext`exp23 = 
       And[$CellContext`a, $CellContext`b]; $CellContext`exp24 = And[
         Not[$CellContext`a], 
         Not[$CellContext`b]]; $CellContext`replacementsList = {
        "&&" -> "\[Intersection]", "||" -> "\[Union]", "!A" -> 
         "\!\(\*SuperscriptBox[\(A\), \(\[Prime]\)]\)", "!B" -> 
         "\!\(\*SuperscriptBox[\(B\), \(\[Prime]\)]\)", "!C" -> 
         "\!\(\*SuperscriptBox[\(C\), \(\[Prime]\)]\)", "FALSE" -> 
         "\[EmptySet]", "TRUE" -> "U"}); Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->271691059],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`gl1$$ = 0.8, $CellContext`gl2$$ = 
    1., $CellContext`gl21$$ = 1, $CellContext`gl22$$ = 
    1, $CellContext`gl23$$ = 1, $CellContext`gl24$$ = 1, $CellContext`gl3$$ = 
    1., $CellContext`gl4$$ = 0.8, $CellContext`gl5$$ = 
    0.8, $CellContext`gl6$$ = 1., $CellContext`gl7$$ = 
    0.8, $CellContext`gl8$$ = 1., $CellContext`num$$ = 
    3, $CellContext`setNot$$ = True, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`gl1$$], 0.8}}, {{
       Hold[$CellContext`gl2$$], 1.}}, {{
       Hold[$CellContext`gl3$$], 1.}}, {{
       Hold[$CellContext`gl4$$], 0.8}}, {{
       Hold[$CellContext`gl5$$], 0.8}}, {{
       Hold[$CellContext`gl6$$], 1.}}, {{
       Hold[$CellContext`gl7$$], 0.8}}, {{
       Hold[$CellContext`gl8$$], 1.}}, {{
       Hold[$CellContext`gl21$$], 1}}, {{
       Hold[$CellContext`gl22$$], 1}}, {{
       Hold[$CellContext`gl23$$], 1}}, {{
       Hold[$CellContext`gl24$$], 1}}, {{
       Hold[$CellContext`num$$], 3, "number of sets"}, {2, 3}}, {{
       Hold[$CellContext`setNot$$], True, "show set notation"}, {
      True, False}}}, Typeset`size$$ = {540., {227.5, 232.5}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`num$3533$$ = False, $CellContext`setNot$3534$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`gl1$$ = 0.8, $CellContext`gl2$$ = 
        1., $CellContext`gl21$$ = 1, $CellContext`gl22$$ = 
        1, $CellContext`gl23$$ = 1, $CellContext`gl24$$ = 
        1, $CellContext`gl3$$ = 1., $CellContext`gl4$$ = 
        0.8, $CellContext`gl5$$ = 0.8, $CellContext`gl6$$ = 
        1., $CellContext`gl7$$ = 0.8, $CellContext`gl8$$ = 
        1., $CellContext`num$$ = 3, $CellContext`setNot$$ = True}, 
      "ControllerVariables" :> {
        Hold[$CellContext`num$$, $CellContext`num$3533$$, False], 
        Hold[$CellContext`setNot$$, $CellContext`setNot$3534$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Switch[$CellContext`num$$, 
        2, $CellContext`expList = {$CellContext`exp21, $CellContext`exp22, \
$CellContext`exp23, $CellContext`exp24}; $CellContext`glList = \
{$CellContext`gl21$$, $CellContext`gl22$$, $CellContext`gl23$$, \
$CellContext`gl24$$}; $CellContext`expParts = 
         Pick[$CellContext`expList, $CellContext`glList, 
           0.8]; $CellContext`setStringDNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "DNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsDNF = Select[
           StringCases[$CellContext`setStringDNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsDNF = 
         StringReplace[$CellContext`newSetStringsDNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalDNF = StringReplace[$CellContext`setStringDNF, 
           Table[
           Part[$CellContext`newSetStringsDNF, $CellContext`i] -> 
            Part[$CellContext`newStringsDNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsDNF]}]]; \
$CellContext`setStringCNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "CNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsCNF = Select[
           StringCases[$CellContext`setStringCNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsCNF = 
         StringReplace[$CellContext`newSetStringsCNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalCNF = StringReplace[$CellContext`setStringCNF, 
           Table[
           Part[$CellContext`newSetStringsCNF, $CellContext`i] -> 
            Part[$CellContext`newStringsCNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsCNF]}]]; \
$CellContext`setStringOR = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "OR"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsOR = Select[
           StringCases[$CellContext`setStringOR, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsOR = 
         StringReplace[$CellContext`newSetStringsOR, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalOR = StringReplace[$CellContext`setStringOR, 
           Table[
           Part[$CellContext`newSetStringsOR, $CellContext`i] -> 
            Part[$CellContext`newStringsOR, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsOR]}]]; \
$CellContext`setStringAND = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "AND"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsAND = Select[
           StringCases[$CellContext`setStringAND, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsAND = 
         StringReplace[$CellContext`newSetStringsAND, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalAND = StringReplace[$CellContext`setStringAND, 
           Table[
           Part[$CellContext`newSetStringsAND, $CellContext`i] -> 
            Part[$CellContext`newStringsAND, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsAND]}]]; \
$CellContext`setNotations = Text[
           Style[
            TableForm[
             
             DeleteDuplicates[{$CellContext`setStringFinalDNF, \
$CellContext`setStringFinalCNF, $CellContext`setStringFinalOR, \
$CellContext`setStringFinalAND}], TableSpacing -> {1.5, Automatic}], Italic, 
            24]]; $CellContext`aOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl21$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
$CellContext`k, 5 $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   2 $CellContext`k, 
                   4 $CellContext`k}]]]}], $CellContext`gl21$$ = 
             1.8 - $CellContext`gl21$$], 
            Inset[
             Text[
              Style["A", Black, Italic, Large], FormatType -> 
              StandardForm], {-1.4, 0.8}]}]; $CellContext`bOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl22$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
-$CellContext`k, $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
(-2) $CellContext`k, 2 $CellContext`k}]]]}], $CellContext`gl22$$ = 
             1.8 - $CellContext`gl22$$], 
            Inset[
             Text[
              Style["B", Black, Italic, Large], FormatType -> StandardForm], {
             1.4, 0.8}]}]; $CellContext`aAndb = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl23$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
-$CellContext`k, $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  2 $CellContext`k, 
                  4 $CellContext`k}]]}], $CellContext`gl23$$ = 
             1.8 - $CellContext`gl23$$]}]; $CellContext`noneOfThem = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl24$$]], 
            Button[
             
             Polygon[{{-2, -2.3}, {2, -2.3}, {
               2, 1.5}, {-2, 1.5}, {-2, -2.3}}], $CellContext`gl24$$ = 
             1.8 - $CellContext`gl24$$], 
            Inset[
             Text[
              Style["U", Black, Italic, Large], FormatType -> StandardForm], {
             2.2, 1.4}]}]; Pane[
          Column[{
            
            Show[$CellContext`noneOfThem, $CellContext`aOnly, \
$CellContext`bOnly, $CellContext`aAndb, ImageSize -> {540, 300}], "", 
            If[$CellContext`setNot$$, $CellContext`setNotations, 
             Invisible[$CellContext`setNotations]]}, Alignment -> Center], 
          ImageSize -> {540, 460}], 
        3, $CellContext`expList = {$CellContext`exp1, $CellContext`exp2, \
$CellContext`exp3, $CellContext`exp4, $CellContext`exp5, $CellContext`exp6, \
$CellContext`exp7, $CellContext`exp8}; $CellContext`glList = \
{$CellContext`gl1$$, $CellContext`gl2$$, $CellContext`gl3$$, \
$CellContext`gl4$$, $CellContext`gl5$$, $CellContext`gl6$$, \
$CellContext`gl7$$, $CellContext`gl8$$}; $CellContext`expParts = 
         Pick[$CellContext`expList, $CellContext`glList, 
           0.8]; $CellContext`setStringDNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "DNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsDNF = Select[
           StringCases[$CellContext`setStringDNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsDNF = 
         StringReplace[$CellContext`newSetStringsDNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalDNF = StringReplace[$CellContext`setStringDNF, 
           Table[
           Part[$CellContext`newSetStringsDNF, $CellContext`i] -> 
            Part[$CellContext`newStringsDNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsDNF]}]]; \
$CellContext`setStringCNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "CNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsCNF = Select[
           StringCases[$CellContext`setStringCNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsCNF = 
         StringReplace[$CellContext`newSetStringsCNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalCNF = StringReplace[$CellContext`setStringCNF, 
           Table[
           Part[$CellContext`newSetStringsCNF, $CellContext`i] -> 
            Part[$CellContext`newStringsCNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsCNF]}]]; \
$CellContext`setStringOR = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "OR"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsOR = Select[
           StringCases[$CellContext`setStringOR, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsOR = 
         StringReplace[$CellContext`newSetStringsOR, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalOR = StringReplace[$CellContext`setStringOR, 
           Table[
           Part[$CellContext`newSetStringsOR, $CellContext`i] -> 
            Part[$CellContext`newStringsOR, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsOR]}]]; \
$CellContext`setStringAND = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "AND"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsAND = Select[
           StringCases[$CellContext`setStringAND, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsAND = 
         StringReplace[$CellContext`newSetStringsAND, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalAND = StringReplace[$CellContext`setStringAND, 
           Table[
           Part[$CellContext`newSetStringsAND, $CellContext`i] -> 
            Part[$CellContext`newStringsAND, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsAND]}]]; \
$CellContext`setNotations = Text[
           Style[
            TableForm[
             
             DeleteDuplicates[{$CellContext`setStringFinalDNF, \
$CellContext`setStringFinalCNF, $CellContext`setStringFinalOR, \
$CellContext`setStringFinalAND}], TableSpacing -> {1.5, Automatic}], Italic, 
            18]]; $CellContext`aOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl1$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
$CellContext`k, 4 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, 2 $CellContext`k, 3 $CellContext`k}]], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   2 $CellContext`k, 
                   3 $CellContext`k}]]]}], $CellContext`gl1$$ = 
             1.8 - $CellContext`gl1$$], 
            Inset[
             Text[
              Style["A", Black, Italic, Large], FormatType -> 
              StandardForm], {-1.4, 0.8}]}]; $CellContext`bOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl2$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  0, $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
-$CellContext`k, 2 $CellContext`k}]], 
                Table[{
                  Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                  Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                  2}, {$CellContext`i, 
                  0, $CellContext`k}]]}], $CellContext`gl2$$ = 
             1.8 - $CellContext`gl2$$], 
            Inset[
             Text[
              Style["B", Black, Italic, Large], FormatType -> StandardForm], {
             1.4, 0.8}]}]; $CellContext`cOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl3$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  4 $CellContext`k, 5 $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  4 $CellContext`k, 5 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, 3 $CellContext`k, 
                   6 $CellContext`k}]]]}], $CellContext`gl3$$ = 
             1.8 - $CellContext`gl3$$], 
            Inset[
             Text[
              Style["C", Black, Italic, Large], FormatType -> StandardForm], {
             0.8, -1.8}]}]; $CellContext`aAndbOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl4$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  0, $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  2 $CellContext`k, 3 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, $CellContext`k, 
                   2 $CellContext`k}]]]}], $CellContext`gl4$$ = 
             1.8 - $CellContext`gl4$$]}]; $CellContext`aAndcOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl5$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  4 $CellContext`k, 5 $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   3 $CellContext`k, 4 $CellContext`k}]], 
                Table[{
                  Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                  Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                  2}, {$CellContext`i, 2 $CellContext`k, 
                  3 $CellContext`k}]]}], $CellContext`gl5$$ = 
             1.8 - $CellContext`gl5$$]}]; $CellContext`bAndcOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl6$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  5 $CellContext`k, 6 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, 0, $CellContext`k}]], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   4 $CellContext`k, 
                   5 $CellContext`k}]]]}], $CellContext`gl6$$ = 
             1.8 - $CellContext`gl6$$]}]; $CellContext`abAndc = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl7$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  5 $CellContext`k, 6 $CellContext`k}], 
                Table[{
                  Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                  Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                  2}, {$CellContext`i, $CellContext`k, 2 $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  3 $CellContext`k, 4 $CellContext`k}]]}], $CellContext`gl7$$ = 
             1.8 - $CellContext`gl7$$]}]; $CellContext`noneOfThem = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl8$$]], 
            Button[
             
             Polygon[{{-2, -2.3}, {2, -2.3}, {
               2, 1.5}, {-2, 1.5}, {-2, -2.3}}], $CellContext`gl8$$ = 
             1.8 - $CellContext`gl8$$], 
            Inset[
             Text[
              Style["U", Black, Italic, Large], FormatType -> StandardForm], {
             2.2, 1.4}]}]; Pane[
          Column[{
            
            Show[$CellContext`noneOfThem, $CellContext`aOnly, \
$CellContext`bOnly, $CellContext`cOnly, $CellContext`aAndbOnly, \
$CellContext`aAndcOnly, $CellContext`bAndcOnly, $CellContext`abAndc, 
             ImageSize -> {540, 300}], "", 
            If[$CellContext`setNot$$, $CellContext`setNotations, 
             Invisible[$CellContext`setNotations]]}, Alignment -> Center], 
          ImageSize -> {540, 460}]], 
      "Specifications" :> {{{$CellContext`gl1$$, 0.8}, ControlType -> 
         None}, {{$CellContext`gl2$$, 1.}, ControlType -> 
         None}, {{$CellContext`gl3$$, 1.}, ControlType -> 
         None}, {{$CellContext`gl4$$, 0.8}, ControlType -> 
         None}, {{$CellContext`gl5$$, 0.8}, ControlType -> 
         None}, {{$CellContext`gl6$$, 1.}, ControlType -> 
         None}, {{$CellContext`gl7$$, 0.8}, ControlType -> 
         None}, {{$CellContext`gl8$$, 1.}, ControlType -> 
         None}, {{$CellContext`gl21$$, 1}, ControlType -> 
         None}, {{$CellContext`gl22$$, 1}, ControlType -> 
         None}, {{$CellContext`gl23$$, 1}, ControlType -> 
         None}, {{$CellContext`gl24$$, 1}, ControlType -> 
         None}, {{$CellContext`num$$, 3, "number of sets"}, {2, 3}, 
         ControlType -> 
         RadioButtonBar}, {{$CellContext`setNot$$, True, 
          "show set notation"}, {True, False}}}, 
      "Options" :> {AutorunSequencing -> {13, 14}, TrackedSymbols -> True}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{589., {287., 294.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`k = 12; $CellContext`exp1 = 
       And[$CellContext`a, 
         Not[$CellContext`b], 
         Not[$CellContext`c]]; $CellContext`exp2 = And[$CellContext`b, 
         Not[$CellContext`a], 
         Not[$CellContext`c]]; $CellContext`exp3 = And[$CellContext`c, 
         Not[$CellContext`a], 
         Not[$CellContext`b]]; $CellContext`exp4 = 
       And[$CellContext`a, $CellContext`b, 
         Not[$CellContext`c]]; $CellContext`exp5 = 
       And[$CellContext`a, $CellContext`c, 
         Not[$CellContext`b]]; $CellContext`exp6 = 
       And[$CellContext`b, $CellContext`c, 
         Not[$CellContext`a]]; $CellContext`exp7 = 
       And[$CellContext`a, $CellContext`b, $CellContext`c]; $CellContext`exp8 = 
       And[
         Not[$CellContext`a], 
         Not[$CellContext`b], 
         Not[$CellContext`c]]; $CellContext`exp21 = And[$CellContext`a, 
         Not[$CellContext`b]]; $CellContext`exp22 = And[$CellContext`b, 
         Not[$CellContext`a]]; $CellContext`exp23 = 
       And[$CellContext`a, $CellContext`b]; $CellContext`exp24 = And[
         Not[$CellContext`a], 
         Not[$CellContext`b]]; $CellContext`replacementsList = {
        "&&" -> "\[Intersection]", "||" -> "\[Union]", "!A" -> 
         "\!\(\*SuperscriptBox[\(A\), \(\[Prime]\)]\)", "!B" -> 
         "\!\(\*SuperscriptBox[\(B\), \(\[Prime]\)]\)", "!C" -> 
         "\!\(\*SuperscriptBox[\(C\), \(\[Prime]\)]\)", "FALSE" -> 
         "\[EmptySet]", "TRUE" -> "U"}); Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->152190174],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`gl1$$ = 1, $CellContext`gl2$$ = 
    1, $CellContext`gl21$$ = 1, $CellContext`gl22$$ = 1, $CellContext`gl23$$ =
     1, $CellContext`gl24$$ = 1, $CellContext`gl3$$ = 1, $CellContext`gl4$$ = 
    0.8, $CellContext`gl5$$ = 1, $CellContext`gl6$$ = 1, $CellContext`gl7$$ = 
    1, $CellContext`gl8$$ = 1, $CellContext`num$$ = 3, $CellContext`setNot$$ =
     True, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`gl1$$], 1}}, {{
       Hold[$CellContext`gl2$$], 1}}, {{
       Hold[$CellContext`gl3$$], 1}}, {{
       Hold[$CellContext`gl4$$], 0.8}}, {{
       Hold[$CellContext`gl5$$], 1}}, {{
       Hold[$CellContext`gl6$$], 1}}, {{
       Hold[$CellContext`gl7$$], 1}}, {{
       Hold[$CellContext`gl8$$], 1}}, {{
       Hold[$CellContext`gl21$$], 1}}, {{
       Hold[$CellContext`gl22$$], 1}}, {{
       Hold[$CellContext`gl23$$], 1}}, {{
       Hold[$CellContext`gl24$$], 1}}, {{
       Hold[$CellContext`num$$], 3, "number of sets"}, {2, 3}}, {{
       Hold[$CellContext`setNot$$], True, "show set notation"}, {
      True, False}}}, Typeset`size$$ = {540., {227.5, 232.5}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`num$3624$$ = False, $CellContext`setNot$3625$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`gl1$$ = 1, $CellContext`gl2$$ = 
        1, $CellContext`gl21$$ = 1, $CellContext`gl22$$ = 
        1, $CellContext`gl23$$ = 1, $CellContext`gl24$$ = 
        1, $CellContext`gl3$$ = 1, $CellContext`gl4$$ = 
        0.8, $CellContext`gl5$$ = 1, $CellContext`gl6$$ = 
        1, $CellContext`gl7$$ = 1, $CellContext`gl8$$ = 1, $CellContext`num$$ = 
        3, $CellContext`setNot$$ = True}, "ControllerVariables" :> {
        Hold[$CellContext`num$$, $CellContext`num$3624$$, False], 
        Hold[$CellContext`setNot$$, $CellContext`setNot$3625$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Switch[$CellContext`num$$, 
        2, $CellContext`expList = {$CellContext`exp21, $CellContext`exp22, \
$CellContext`exp23, $CellContext`exp24}; $CellContext`glList = \
{$CellContext`gl21$$, $CellContext`gl22$$, $CellContext`gl23$$, \
$CellContext`gl24$$}; $CellContext`expParts = 
         Pick[$CellContext`expList, $CellContext`glList, 
           0.8]; $CellContext`setStringDNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "DNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsDNF = Select[
           StringCases[$CellContext`setStringDNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsDNF = 
         StringReplace[$CellContext`newSetStringsDNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalDNF = StringReplace[$CellContext`setStringDNF, 
           Table[
           Part[$CellContext`newSetStringsDNF, $CellContext`i] -> 
            Part[$CellContext`newStringsDNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsDNF]}]]; \
$CellContext`setStringCNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "CNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsCNF = Select[
           StringCases[$CellContext`setStringCNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsCNF = 
         StringReplace[$CellContext`newSetStringsCNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalCNF = StringReplace[$CellContext`setStringCNF, 
           Table[
           Part[$CellContext`newSetStringsCNF, $CellContext`i] -> 
            Part[$CellContext`newStringsCNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsCNF]}]]; \
$CellContext`setStringOR = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "OR"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsOR = Select[
           StringCases[$CellContext`setStringOR, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsOR = 
         StringReplace[$CellContext`newSetStringsOR, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalOR = StringReplace[$CellContext`setStringOR, 
           Table[
           Part[$CellContext`newSetStringsOR, $CellContext`i] -> 
            Part[$CellContext`newStringsOR, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsOR]}]]; \
$CellContext`setStringAND = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "AND"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsAND = Select[
           StringCases[$CellContext`setStringAND, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsAND = 
         StringReplace[$CellContext`newSetStringsAND, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalAND = StringReplace[$CellContext`setStringAND, 
           Table[
           Part[$CellContext`newSetStringsAND, $CellContext`i] -> 
            Part[$CellContext`newStringsAND, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsAND]}]]; \
$CellContext`setNotations = Text[
           Style[
            TableForm[
             
             DeleteDuplicates[{$CellContext`setStringFinalDNF, \
$CellContext`setStringFinalCNF, $CellContext`setStringFinalOR, \
$CellContext`setStringFinalAND}], TableSpacing -> {1.5, Automatic}], Italic, 
            24]]; $CellContext`aOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl21$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
$CellContext`k, 5 $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   2 $CellContext`k, 
                   4 $CellContext`k}]]]}], $CellContext`gl21$$ = 
             1.8 - $CellContext`gl21$$], 
            Inset[
             Text[
              Style["A", Black, Italic, Large], FormatType -> 
              StandardForm], {-1.4, 0.8}]}]; $CellContext`bOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl22$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
-$CellContext`k, $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
(-2) $CellContext`k, 2 $CellContext`k}]]]}], $CellContext`gl22$$ = 
             1.8 - $CellContext`gl22$$], 
            Inset[
             Text[
              Style["B", Black, Italic, Large], FormatType -> StandardForm], {
             1.4, 0.8}]}]; $CellContext`aAndb = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl23$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
-$CellContext`k, $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  2 $CellContext`k, 
                  4 $CellContext`k}]]}], $CellContext`gl23$$ = 
             1.8 - $CellContext`gl23$$]}]; $CellContext`noneOfThem = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl24$$]], 
            Button[
             
             Polygon[{{-2, -2.3}, {2, -2.3}, {
               2, 1.5}, {-2, 1.5}, {-2, -2.3}}], $CellContext`gl24$$ = 
             1.8 - $CellContext`gl24$$], 
            Inset[
             Text[
              Style["U", Black, Italic, Large], FormatType -> StandardForm], {
             2.2, 1.4}]}]; Pane[
          Column[{
            
            Show[$CellContext`noneOfThem, $CellContext`aOnly, \
$CellContext`bOnly, $CellContext`aAndb, ImageSize -> {540, 300}], "", 
            If[$CellContext`setNot$$, $CellContext`setNotations, 
             Invisible[$CellContext`setNotations]]}, Alignment -> Center], 
          ImageSize -> {540, 460}], 
        3, $CellContext`expList = {$CellContext`exp1, $CellContext`exp2, \
$CellContext`exp3, $CellContext`exp4, $CellContext`exp5, $CellContext`exp6, \
$CellContext`exp7, $CellContext`exp8}; $CellContext`glList = \
{$CellContext`gl1$$, $CellContext`gl2$$, $CellContext`gl3$$, \
$CellContext`gl4$$, $CellContext`gl5$$, $CellContext`gl6$$, \
$CellContext`gl7$$, $CellContext`gl8$$}; $CellContext`expParts = 
         Pick[$CellContext`expList, $CellContext`glList, 
           0.8]; $CellContext`setStringDNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "DNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsDNF = Select[
           StringCases[$CellContext`setStringDNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsDNF = 
         StringReplace[$CellContext`newSetStringsDNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalDNF = StringReplace[$CellContext`setStringDNF, 
           Table[
           Part[$CellContext`newSetStringsDNF, $CellContext`i] -> 
            Part[$CellContext`newStringsDNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsDNF]}]]; \
$CellContext`setStringCNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "CNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsCNF = Select[
           StringCases[$CellContext`setStringCNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsCNF = 
         StringReplace[$CellContext`newSetStringsCNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalCNF = StringReplace[$CellContext`setStringCNF, 
           Table[
           Part[$CellContext`newSetStringsCNF, $CellContext`i] -> 
            Part[$CellContext`newStringsCNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsCNF]}]]; \
$CellContext`setStringOR = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "OR"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsOR = Select[
           StringCases[$CellContext`setStringOR, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsOR = 
         StringReplace[$CellContext`newSetStringsOR, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalOR = StringReplace[$CellContext`setStringOR, 
           Table[
           Part[$CellContext`newSetStringsOR, $CellContext`i] -> 
            Part[$CellContext`newStringsOR, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsOR]}]]; \
$CellContext`setStringAND = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "AND"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsAND = Select[
           StringCases[$CellContext`setStringAND, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsAND = 
         StringReplace[$CellContext`newSetStringsAND, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalAND = StringReplace[$CellContext`setStringAND, 
           Table[
           Part[$CellContext`newSetStringsAND, $CellContext`i] -> 
            Part[$CellContext`newStringsAND, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsAND]}]]; \
$CellContext`setNotations = Text[
           Style[
            TableForm[
             
             DeleteDuplicates[{$CellContext`setStringFinalDNF, \
$CellContext`setStringFinalCNF, $CellContext`setStringFinalOR, \
$CellContext`setStringFinalAND}], TableSpacing -> {1.5, Automatic}], Italic, 
            18]]; $CellContext`aOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl1$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
$CellContext`k, 4 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, 2 $CellContext`k, 3 $CellContext`k}]], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   2 $CellContext`k, 
                   3 $CellContext`k}]]]}], $CellContext`gl1$$ = 
             1.8 - $CellContext`gl1$$], 
            Inset[
             Text[
              Style["A", Black, Italic, Large], FormatType -> 
              StandardForm], {-1.4, 0.8}]}]; $CellContext`bOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl2$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  0, $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
-$CellContext`k, 2 $CellContext`k}]], 
                Table[{
                  Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                  Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                  2}, {$CellContext`i, 
                  0, $CellContext`k}]]}], $CellContext`gl2$$ = 
             1.8 - $CellContext`gl2$$], 
            Inset[
             Text[
              Style["B", Black, Italic, Large], FormatType -> StandardForm], {
             1.4, 0.8}]}]; $CellContext`cOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl3$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  4 $CellContext`k, 5 $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  4 $CellContext`k, 5 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, 3 $CellContext`k, 
                   6 $CellContext`k}]]]}], $CellContext`gl3$$ = 
             1.8 - $CellContext`gl3$$], 
            Inset[
             Text[
              Style["C", Black, Italic, Large], FormatType -> StandardForm], {
             0.8, -1.8}]}]; $CellContext`aAndbOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl4$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  0, $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  2 $CellContext`k, 3 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, $CellContext`k, 
                   2 $CellContext`k}]]]}], $CellContext`gl4$$ = 
             1.8 - $CellContext`gl4$$]}]; $CellContext`aAndcOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl5$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  4 $CellContext`k, 5 $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   3 $CellContext`k, 4 $CellContext`k}]], 
                Table[{
                  Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                  Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                  2}, {$CellContext`i, 2 $CellContext`k, 
                  3 $CellContext`k}]]}], $CellContext`gl5$$ = 
             1.8 - $CellContext`gl5$$]}]; $CellContext`bAndcOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl6$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  5 $CellContext`k, 6 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, 0, $CellContext`k}]], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   4 $CellContext`k, 
                   5 $CellContext`k}]]]}], $CellContext`gl6$$ = 
             1.8 - $CellContext`gl6$$]}]; $CellContext`abAndc = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl7$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  5 $CellContext`k, 6 $CellContext`k}], 
                Table[{
                  Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                  Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                  2}, {$CellContext`i, $CellContext`k, 2 $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  3 $CellContext`k, 4 $CellContext`k}]]}], $CellContext`gl7$$ = 
             1.8 - $CellContext`gl7$$]}]; $CellContext`noneOfThem = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl8$$]], 
            Button[
             
             Polygon[{{-2, -2.3}, {2, -2.3}, {
               2, 1.5}, {-2, 1.5}, {-2, -2.3}}], $CellContext`gl8$$ = 
             1.8 - $CellContext`gl8$$], 
            Inset[
             Text[
              Style["U", Black, Italic, Large], FormatType -> StandardForm], {
             2.2, 1.4}]}]; Pane[
          Column[{
            
            Show[$CellContext`noneOfThem, $CellContext`aOnly, \
$CellContext`bOnly, $CellContext`cOnly, $CellContext`aAndbOnly, \
$CellContext`aAndcOnly, $CellContext`bAndcOnly, $CellContext`abAndc, 
             ImageSize -> {540, 300}], "", 
            If[$CellContext`setNot$$, $CellContext`setNotations, 
             Invisible[$CellContext`setNotations]]}, Alignment -> Center], 
          ImageSize -> {540, 460}]], 
      "Specifications" :> {{{$CellContext`gl1$$, 1}, ControlType -> 
         None}, {{$CellContext`gl2$$, 1}, ControlType -> 
         None}, {{$CellContext`gl3$$, 1}, ControlType -> 
         None}, {{$CellContext`gl4$$, 0.8}, ControlType -> 
         None}, {{$CellContext`gl5$$, 1}, ControlType -> 
         None}, {{$CellContext`gl6$$, 1}, ControlType -> 
         None}, {{$CellContext`gl7$$, 1}, ControlType -> 
         None}, {{$CellContext`gl8$$, 1}, ControlType -> 
         None}, {{$CellContext`gl21$$, 1}, ControlType -> 
         None}, {{$CellContext`gl22$$, 1}, ControlType -> 
         None}, {{$CellContext`gl23$$, 1}, ControlType -> 
         None}, {{$CellContext`gl24$$, 1}, ControlType -> 
         None}, {{$CellContext`num$$, 3, "number of sets"}, {2, 3}, 
         ControlType -> 
         RadioButtonBar}, {{$CellContext`setNot$$, True, 
          "show set notation"}, {True, False}}}, 
      "Options" :> {AutorunSequencing -> {13, 14}, TrackedSymbols -> True}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{589., {287., 294.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`k = 12; $CellContext`exp1 = 
       And[$CellContext`a, 
         Not[$CellContext`b], 
         Not[$CellContext`c]]; $CellContext`exp2 = And[$CellContext`b, 
         Not[$CellContext`a], 
         Not[$CellContext`c]]; $CellContext`exp3 = And[$CellContext`c, 
         Not[$CellContext`a], 
         Not[$CellContext`b]]; $CellContext`exp4 = 
       And[$CellContext`a, $CellContext`b, 
         Not[$CellContext`c]]; $CellContext`exp5 = 
       And[$CellContext`a, $CellContext`c, 
         Not[$CellContext`b]]; $CellContext`exp6 = 
       And[$CellContext`b, $CellContext`c, 
         Not[$CellContext`a]]; $CellContext`exp7 = 
       And[$CellContext`a, $CellContext`b, $CellContext`c]; $CellContext`exp8 = 
       And[
         Not[$CellContext`a], 
         Not[$CellContext`b], 
         Not[$CellContext`c]]; $CellContext`exp21 = And[$CellContext`a, 
         Not[$CellContext`b]]; $CellContext`exp22 = And[$CellContext`b, 
         Not[$CellContext`a]]; $CellContext`exp23 = 
       And[$CellContext`a, $CellContext`b]; $CellContext`exp24 = And[
         Not[$CellContext`a], 
         Not[$CellContext`b]]; $CellContext`replacementsList = {
        "&&" -> "\[Intersection]", "||" -> "\[Union]", "!A" -> 
         "\!\(\*SuperscriptBox[\(A\), \(\[Prime]\)]\)", "!B" -> 
         "\!\(\*SuperscriptBox[\(B\), \(\[Prime]\)]\)", "!C" -> 
         "\!\(\*SuperscriptBox[\(C\), \(\[Prime]\)]\)", "FALSE" -> 
         "\[EmptySet]", "TRUE" -> "U"}); Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->188354004],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`gl1$$ = 1, $CellContext`gl2$$ = 
    0.8, $CellContext`gl21$$ = 1, $CellContext`gl22$$ = 
    1, $CellContext`gl23$$ = 1, $CellContext`gl24$$ = 1, $CellContext`gl3$$ = 
    1, $CellContext`gl4$$ = 1, $CellContext`gl5$$ = 0.8, $CellContext`gl6$$ = 
    0.8, $CellContext`gl7$$ = 1, $CellContext`gl8$$ = 1, $CellContext`num$$ = 
    3, $CellContext`setNot$$ = True, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`gl1$$], 1}}, {{
       Hold[$CellContext`gl2$$], 0.8}}, {{
       Hold[$CellContext`gl3$$], 1}}, {{
       Hold[$CellContext`gl4$$], 1}}, {{
       Hold[$CellContext`gl5$$], 0.8}}, {{
       Hold[$CellContext`gl6$$], 0.8}}, {{
       Hold[$CellContext`gl7$$], 1}}, {{
       Hold[$CellContext`gl8$$], 1}}, {{
       Hold[$CellContext`gl21$$], 1}}, {{
       Hold[$CellContext`gl22$$], 1}}, {{
       Hold[$CellContext`gl23$$], 1}}, {{
       Hold[$CellContext`gl24$$], 1}}, {{
       Hold[$CellContext`num$$], 3, "number of sets"}, {2, 3}}, {{
       Hold[$CellContext`setNot$$], True, "show set notation"}, {
      True, False}}}, Typeset`size$$ = {540., {227.5, 232.5}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`num$3715$$ = False, $CellContext`setNot$3716$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`gl1$$ = 1, $CellContext`gl2$$ = 
        0.8, $CellContext`gl21$$ = 1, $CellContext`gl22$$ = 
        1, $CellContext`gl23$$ = 1, $CellContext`gl24$$ = 
        1, $CellContext`gl3$$ = 1, $CellContext`gl4$$ = 1, $CellContext`gl5$$ = 
        0.8, $CellContext`gl6$$ = 0.8, $CellContext`gl7$$ = 
        1, $CellContext`gl8$$ = 1, $CellContext`num$$ = 
        3, $CellContext`setNot$$ = True}, "ControllerVariables" :> {
        Hold[$CellContext`num$$, $CellContext`num$3715$$, False], 
        Hold[$CellContext`setNot$$, $CellContext`setNot$3716$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Switch[$CellContext`num$$, 
        2, $CellContext`expList = {$CellContext`exp21, $CellContext`exp22, \
$CellContext`exp23, $CellContext`exp24}; $CellContext`glList = \
{$CellContext`gl21$$, $CellContext`gl22$$, $CellContext`gl23$$, \
$CellContext`gl24$$}; $CellContext`expParts = 
         Pick[$CellContext`expList, $CellContext`glList, 
           0.8]; $CellContext`setStringDNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "DNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsDNF = Select[
           StringCases[$CellContext`setStringDNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsDNF = 
         StringReplace[$CellContext`newSetStringsDNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalDNF = StringReplace[$CellContext`setStringDNF, 
           Table[
           Part[$CellContext`newSetStringsDNF, $CellContext`i] -> 
            Part[$CellContext`newStringsDNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsDNF]}]]; \
$CellContext`setStringCNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "CNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsCNF = Select[
           StringCases[$CellContext`setStringCNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsCNF = 
         StringReplace[$CellContext`newSetStringsCNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalCNF = StringReplace[$CellContext`setStringCNF, 
           Table[
           Part[$CellContext`newSetStringsCNF, $CellContext`i] -> 
            Part[$CellContext`newStringsCNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsCNF]}]]; \
$CellContext`setStringOR = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "OR"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsOR = Select[
           StringCases[$CellContext`setStringOR, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsOR = 
         StringReplace[$CellContext`newSetStringsOR, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalOR = StringReplace[$CellContext`setStringOR, 
           Table[
           Part[$CellContext`newSetStringsOR, $CellContext`i] -> 
            Part[$CellContext`newStringsOR, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsOR]}]]; \
$CellContext`setStringAND = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "AND"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsAND = Select[
           StringCases[$CellContext`setStringAND, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsAND = 
         StringReplace[$CellContext`newSetStringsAND, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalAND = StringReplace[$CellContext`setStringAND, 
           Table[
           Part[$CellContext`newSetStringsAND, $CellContext`i] -> 
            Part[$CellContext`newStringsAND, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsAND]}]]; \
$CellContext`setNotations = Text[
           Style[
            TableForm[
             
             DeleteDuplicates[{$CellContext`setStringFinalDNF, \
$CellContext`setStringFinalCNF, $CellContext`setStringFinalOR, \
$CellContext`setStringFinalAND}], TableSpacing -> {1.5, Automatic}], Italic, 
            24]]; $CellContext`aOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl21$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
$CellContext`k, 5 $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   2 $CellContext`k, 
                   4 $CellContext`k}]]]}], $CellContext`gl21$$ = 
             1.8 - $CellContext`gl21$$], 
            Inset[
             Text[
              Style["A", Black, Italic, Large], FormatType -> 
              StandardForm], {-1.4, 0.8}]}]; $CellContext`bOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl22$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
-$CellContext`k, $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
(-2) $CellContext`k, 2 $CellContext`k}]]]}], $CellContext`gl22$$ = 
             1.8 - $CellContext`gl22$$], 
            Inset[
             Text[
              Style["B", Black, Italic, Large], FormatType -> StandardForm], {
             1.4, 0.8}]}]; $CellContext`aAndb = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl23$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
-$CellContext`k, $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  2 $CellContext`k, 
                  4 $CellContext`k}]]}], $CellContext`gl23$$ = 
             1.8 - $CellContext`gl23$$]}]; $CellContext`noneOfThem = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl24$$]], 
            Button[
             
             Polygon[{{-2, -2.3}, {2, -2.3}, {
               2, 1.5}, {-2, 1.5}, {-2, -2.3}}], $CellContext`gl24$$ = 
             1.8 - $CellContext`gl24$$], 
            Inset[
             Text[
              Style["U", Black, Italic, Large], FormatType -> StandardForm], {
             2.2, 1.4}]}]; Pane[
          Column[{
            
            Show[$CellContext`noneOfThem, $CellContext`aOnly, \
$CellContext`bOnly, $CellContext`aAndb, ImageSize -> {540, 300}], "", 
            If[$CellContext`setNot$$, $CellContext`setNotations, 
             Invisible[$CellContext`setNotations]]}, Alignment -> Center], 
          ImageSize -> {540, 460}], 
        3, $CellContext`expList = {$CellContext`exp1, $CellContext`exp2, \
$CellContext`exp3, $CellContext`exp4, $CellContext`exp5, $CellContext`exp6, \
$CellContext`exp7, $CellContext`exp8}; $CellContext`glList = \
{$CellContext`gl1$$, $CellContext`gl2$$, $CellContext`gl3$$, \
$CellContext`gl4$$, $CellContext`gl5$$, $CellContext`gl6$$, \
$CellContext`gl7$$, $CellContext`gl8$$}; $CellContext`expParts = 
         Pick[$CellContext`expList, $CellContext`glList, 
           0.8]; $CellContext`setStringDNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "DNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsDNF = Select[
           StringCases[$CellContext`setStringDNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsDNF = 
         StringReplace[$CellContext`newSetStringsDNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalDNF = StringReplace[$CellContext`setStringDNF, 
           Table[
           Part[$CellContext`newSetStringsDNF, $CellContext`i] -> 
            Part[$CellContext`newStringsDNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsDNF]}]]; \
$CellContext`setStringCNF = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "CNF"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsCNF = Select[
           StringCases[$CellContext`setStringCNF, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsCNF = 
         StringReplace[$CellContext`newSetStringsCNF, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalCNF = StringReplace[$CellContext`setStringCNF, 
           Table[
           Part[$CellContext`newSetStringsCNF, $CellContext`i] -> 
            Part[$CellContext`newStringsCNF, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsCNF]}]]; \
$CellContext`setStringOR = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "OR"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsOR = Select[
           StringCases[$CellContext`setStringOR, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsOR = 
         StringReplace[$CellContext`newSetStringsOR, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalOR = StringReplace[$CellContext`setStringOR, 
           Table[
           Part[$CellContext`newSetStringsOR, $CellContext`i] -> 
            Part[$CellContext`newStringsOR, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsOR]}]]; \
$CellContext`setStringAND = StringReplace[
           ToUpperCase[
            ToString[
             BooleanMinimize[
              Apply[Or, $CellContext`expParts], 
              "AND"]]], $CellContext`replacementsList]; \
$CellContext`newSetStringsAND = Select[
           StringCases[$CellContext`setStringAND, 
            StringExpression["!(", 
             BlankSequence[], ")"], Overlaps -> All], StringCount[#, "("] == 
           1& ]; $CellContext`newStringsAND = 
         StringReplace[$CellContext`newSetStringsAND, {
           "!(" -> "(", ")" -> 
            "\!\(\*SuperscriptBox[\()\), \(\[Prime]\)]\)"}]; \
$CellContext`setStringFinalAND = StringReplace[$CellContext`setStringAND, 
           Table[
           Part[$CellContext`newSetStringsAND, $CellContext`i] -> 
            Part[$CellContext`newStringsAND, $CellContext`i], {$CellContext`i, 
             
             Length[$CellContext`newSetStringsAND]}]]; \
$CellContext`setNotations = Text[
           Style[
            TableForm[
             
             DeleteDuplicates[{$CellContext`setStringFinalDNF, \
$CellContext`setStringFinalCNF, $CellContext`setStringFinalOR, \
$CellContext`setStringFinalAND}], TableSpacing -> {1.5, Automatic}], Italic, 
            18]]; $CellContext`aOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl1$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
$CellContext`k, 4 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, 2 $CellContext`k, 3 $CellContext`k}]], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   2 $CellContext`k, 
                   3 $CellContext`k}]]]}], $CellContext`gl1$$ = 
             1.8 - $CellContext`gl1$$], 
            Inset[
             Text[
              Style["A", Black, Italic, Large], FormatType -> 
              StandardForm], {-1.4, 0.8}]}]; $CellContext`bOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl2$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  0, $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, \
-$CellContext`k, 2 $CellContext`k}]], 
                Table[{
                  Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                  Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                  2}, {$CellContext`i, 
                  0, $CellContext`k}]]}], $CellContext`gl2$$ = 
             1.8 - $CellContext`gl2$$], 
            Inset[
             Text[
              Style["B", Black, Italic, Large], FormatType -> StandardForm], {
             1.4, 0.8}]}]; $CellContext`cOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl3$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  4 $CellContext`k, 5 $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  4 $CellContext`k, 5 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, 3 $CellContext`k, 
                   6 $CellContext`k}]]]}], $CellContext`gl3$$ = 
             1.8 - $CellContext`gl3$$], 
            Inset[
             Text[
              Style["C", Black, Italic, Large], FormatType -> StandardForm], {
             0.8, -1.8}]}]; $CellContext`aAndbOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl4$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  0, $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  2 $CellContext`k, 3 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, $CellContext`k, 
                   2 $CellContext`k}]]]}], $CellContext`gl4$$ = 
             1.8 - $CellContext`gl4$$]}]; $CellContext`aAndcOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl5$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  4 $CellContext`k, 5 $CellContext`k}], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   3 $CellContext`k, 4 $CellContext`k}]], 
                Table[{
                  Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                  Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                  2}, {$CellContext`i, 2 $CellContext`k, 
                  3 $CellContext`k}]]}], $CellContext`gl5$$ = 
             1.8 - $CellContext`gl5$$]}]; $CellContext`bAndcOnly = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl6$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  5 $CellContext`k, 6 $CellContext`k}], 
                Reverse[
                 Table[{
                   Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                   Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                   2}, {$CellContext`i, 0, $CellContext`k}]], 
                Reverse[
                 Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                   
                   Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                   4 $CellContext`k, 
                   5 $CellContext`k}]]]}], $CellContext`gl6$$ = 
             1.8 - $CellContext`gl6$$]}]; $CellContext`abAndc = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl7$$]], 
            Button[
             Polygon[{
               Join[
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] - 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  5 $CellContext`k, 6 $CellContext`k}], 
                Table[{
                  Cos[(Pi/(3 $CellContext`k)) $CellContext`i], 
                  Sin[(Pi/(3 $CellContext`k)) $CellContext`i] - Sqrt[3]/
                  2}, {$CellContext`i, $CellContext`k, 2 $CellContext`k}], 
                Table[{Cos[(Pi/(3 $CellContext`k)) $CellContext`i] + 1/2, 
                  
                  Sin[(Pi/(
                    3 $CellContext`k)) $CellContext`i]}, {$CellContext`i, 
                  3 $CellContext`k, 4 $CellContext`k}]]}], $CellContext`gl7$$ = 
             1.8 - $CellContext`gl7$$]}]; $CellContext`noneOfThem = Graphics[{
            EdgeForm[Thick], 
            Dynamic[
             GrayLevel[$CellContext`gl8$$]], 
            Button[
             
             Polygon[{{-2, -2.3}, {2, -2.3}, {
               2, 1.5}, {-2, 1.5}, {-2, -2.3}}], $CellContext`gl8$$ = 
             1.8 - $CellContext`gl8$$], 
            Inset[
             Text[
              Style["U", Black, Italic, Large], FormatType -> StandardForm], {
             2.2, 1.4}]}]; Pane[
          Column[{
            
            Show[$CellContext`noneOfThem, $CellContext`aOnly, \
$CellContext`bOnly, $CellContext`cOnly, $CellContext`aAndbOnly, \
$CellContext`aAndcOnly, $CellContext`bAndcOnly, $CellContext`abAndc, 
             ImageSize -> {540, 300}], "", 
            If[$CellContext`setNot$$, $CellContext`setNotations, 
             Invisible[$CellContext`setNotations]]}, Alignment -> Center], 
          ImageSize -> {540, 460}]], 
      "Specifications" :> {{{$CellContext`gl1$$, 1}, ControlType -> 
         None}, {{$CellContext`gl2$$, 0.8}, ControlType -> 
         None}, {{$CellContext`gl3$$, 1}, ControlType -> 
         None}, {{$CellContext`gl4$$, 1}, ControlType -> 
         None}, {{$CellContext`gl5$$, 0.8}, ControlType -> 
         None}, {{$CellContext`gl6$$, 0.8}, ControlType -> 
         None}, {{$CellContext`gl7$$, 1}, ControlType -> 
         None}, {{$CellContext`gl8$$, 1}, ControlType -> 
         None}, {{$CellContext`gl21$$, 1}, ControlType -> 
         None}, {{$CellContext`gl22$$, 1}, ControlType -> 
         None}, {{$CellContext`gl23$$, 1}, ControlType -> 
         None}, {{$CellContext`gl24$$, 1}, ControlType -> 
         None}, {{$CellContext`num$$, 3, "number of sets"}, {2, 3}, 
         ControlType -> 
         RadioButtonBar}, {{$CellContext`setNot$$, True, 
          "show set notation"}, {True, False}}}, 
      "Options" :> {AutorunSequencing -> {13, 14}, TrackedSymbols -> True}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{589., {287., 294.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`k = 12; $CellContext`exp1 = 
       And[$CellContext`a, 
         Not[$CellContext`b], 
         Not[$CellContext`c]]; $CellContext`exp2 = And[$CellContext`b, 
         Not[$CellContext`a], 
         Not[$CellContext`c]]; $CellContext`exp3 = And[$CellContext`c, 
         Not[$CellContext`a], 
         Not[$CellContext`b]]; $CellContext`exp4 = 
       And[$CellContext`a, $CellContext`b, 
         Not[$CellContext`c]]; $CellContext`exp5 = 
       And[$CellContext`a, $CellContext`c, 
         Not[$CellContext`b]]; $CellContext`exp6 = 
       And[$CellContext`b, $CellContext`c, 
         Not[$CellContext`a]]; $CellContext`exp7 = 
       And[$CellContext`a, $CellContext`b, $CellContext`c]; $CellContext`exp8 = 
       And[
         Not[$CellContext`a], 
         Not[$CellContext`b], 
         Not[$CellContext`c]]; $CellContext`exp21 = And[$CellContext`a, 
         Not[$CellContext`b]]; $CellContext`exp22 = And[$CellContext`b, 
         Not[$CellContext`a]]; $CellContext`exp23 = 
       And[$CellContext`a, $CellContext`b]; $CellContext`exp24 = And[
         Not[$CellContext`a], 
         Not[$CellContext`b]]; $CellContext`replacementsList = {
        "&&" -> "\[Intersection]", "||" -> "\[Union]", "!A" -> 
         "\!\(\*SuperscriptBox[\(A\), \(\[Prime]\)]\)", "!B" -> 
         "\!\(\*SuperscriptBox[\(B\), \(\[Prime]\)]\)", "!C" -> 
         "\!\(\*SuperscriptBox[\(C\), \(\[Prime]\)]\)", "FALSE" -> 
         "\[EmptySet]", "TRUE" -> "U"}); Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->150757048]
}, Open  ]],

Cell["", "DetailsSection"],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Resize Images"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\""]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"ResizeImages"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Rotate and Zoom in 3D"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" on Mac) and drag up and down to zoom.\""}]]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"RotateAndZoomIn3D"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Drag Locators"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}]]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"DragLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Create and Delete Locators"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}]]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"CreateAndDeleteLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Slider Zoom"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" to make ever finer adjustments.\""}]]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"SliderZoom"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Gamepad Controls"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\""]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9},
 FontFamily->"Verdana",
 CellTags->"GamepadControls"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Automatic Animation"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}]]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"AutomaticAnimation"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Bookmark Animation"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}]]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"BookmarkAnimation"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection"],

Cell["sets", "SearchTerms",
 CellChangeTimes->{
  3.35696210375764*^9, {3.48767784025*^9, 3.4876778408125*^9}},
 CellID->21531734],

Cell["Venn diagrams", "SearchTerms",
 CellChangeTimes->{
  3.35696210375764*^9, {3.4876778411875*^9, 3.487677842703125*^9}},
 CellID->167618531]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "RelatedLinksSection"],

Cell[TextData[ButtonBox["Venn Diagram",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/VennDiagram.html"], None},
 ButtonNote->"http://mathworld.wolfram.com/VennDiagram.html"]], "RelatedLinks",
 CellID->17206420],

Cell[TextData[ButtonBox["Venn Diagrams",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/VennDiagrams/"], None},
 ButtonNote->
  "http://demonstrations.wolfram.com/VennDiagrams/"]], "RelatedLinks",
 CellID->289596951]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "AuthorSection"],

Cell[TextData[{
 "Contributed by: ",
 ButtonBox["Marc Brodie",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Marc+Brodie"], 
    None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Marc+Brodie"],
 " (Wheeling Jesuit University)"
}], "Author",
 CellChangeTimes->{
  3.35696210375764*^9, {3.432333043774981*^9, 3.432333045441087*^9}, {
   3.4876776825*^9, 3.487677690953125*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{843, 840},
WindowMargins->{{10, Automatic}, {Automatic, 0}},
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (March 5, 2013)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ResizeImages"->{
  Cell[250177, 5596, 290, 7, 22, "ControlSuggestions",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[250470, 5605, 661, 16, 22, "ControlSuggestions",
   CellTags->"RotateAndZoomIn3D"]},
 "DragLocators"->{
  Cell[251134, 5623, 318, 10, 22, "ControlSuggestions",
   CellTags->"DragLocators"]},
 "CreateAndDeleteLocators"->{
  Cell[251455, 5635, 615, 14, 22, "ControlSuggestions",
   CellTags->"CreateAndDeleteLocators"]},
 "SliderZoom"->{
  Cell[252073, 5651, 827, 21, 22, "ControlSuggestions",
   CellTags->"SliderZoom"]},
 "GamepadControls"->{
  Cell[252903, 5674, 347, 8, 22, "ControlSuggestions",
   CellTags->"GamepadControls"]},
 "AutomaticAnimation"->{
  Cell[253253, 5684, 1442, 30, 22, "ControlSuggestions",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[254698, 5716, 886, 20, 22, "ControlSuggestions",
   CellTags->"BookmarkAnimation"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ResizeImages", 257424, 5806},
 {"RotateAndZoomIn3D", 257534, 5809},
 {"DragLocators", 257645, 5812},
 {"CreateAndDeleteLocators", 257762, 5815},
 {"SliderZoom", 257877, 5818},
 {"GamepadControls", 257984, 5821},
 {"AutomaticAnimation", 258098, 5824},
 {"BookmarkAnimation", 258216, 5827}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 136, 2, 83, "DemoTitle"],
Cell[706, 26, 33, 0, 388, "InitializationSection"],
Cell[CellGroupData[{
Cell[764, 30, 29, 0, 264, "ManipulateSection"],
Cell[CellGroupData[{
Cell[818, 34, 63340, 1543, 6447, "Input"],
Cell[64161, 1579, 26434, 566, 593, "Output",
 CellID->83885949]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[90644, 2151, 36, 0, 215, "ManipulateCaptionSection"],
Cell[90683, 2153, 428, 8, 64, "ManipulateCaption"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91148, 2166, 28, 0, 208, "ThumbnailSection"],
Cell[91179, 2168, 26460, 567, 593, "Output",
 CellID->305496916]
}, Open  ]],
Cell[CellGroupData[{
Cell[117676, 2740, 28, 0, 177, "SnapshotsSection"],
Cell[117707, 2742, 26491, 568, 593, "Output",
 CellID->5097055],
Cell[144201, 3312, 26454, 567, 573, "Output",
 CellID->271691059],
Cell[170658, 3881, 26500, 569, 573, "Output",
 CellID->152190174],
Cell[197161, 4452, 26443, 566, 573, "Output",
 CellID->188354004],
Cell[223607, 5020, 26464, 567, 573, "Output",
 CellID->150757048]
}, Open  ]],
Cell[250086, 5590, 26, 0, 332, "DetailsSection"],
Cell[CellGroupData[{
Cell[250137, 5594, 37, 0, 108, "ControlSuggestionsSection"],
Cell[250177, 5596, 290, 7, 22, "ControlSuggestions",
 CellTags->"ResizeImages"],
Cell[250470, 5605, 661, 16, 22, "ControlSuggestions",
 CellTags->"RotateAndZoomIn3D"],
Cell[251134, 5623, 318, 10, 22, "ControlSuggestions",
 CellTags->"DragLocators"],
Cell[251455, 5635, 615, 14, 22, "ControlSuggestions",
 CellTags->"CreateAndDeleteLocators"],
Cell[252073, 5651, 827, 21, 22, "ControlSuggestions",
 CellTags->"SliderZoom"],
Cell[252903, 5674, 347, 8, 22, "ControlSuggestions",
 CellTags->"GamepadControls"],
Cell[253253, 5684, 1442, 30, 22, "ControlSuggestions",
 CellTags->"AutomaticAnimation"],
Cell[254698, 5716, 886, 20, 22, "ControlSuggestions",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255621, 5741, 30, 0, 152, "SearchTermsSection"],
Cell[255654, 5743, 130, 3, 22, "SearchTerms",
 CellID->21531734],
Cell[255787, 5748, 144, 3, 22, "SearchTerms",
 CellID->167618531]
}, Open  ]],
Cell[CellGroupData[{
Cell[255968, 5756, 31, 0, 138, "RelatedLinksSection"],
Cell[256002, 5758, 242, 5, 22, "RelatedLinks",
 CellID->17206420],
Cell[256247, 5765, 251, 6, 22, "RelatedLinks",
 CellID->289596951]
}, Open  ]],
Cell[CellGroupData[{
Cell[256535, 5776, 25, 0, 136, "AuthorSection"],
Cell[256563, 5778, 462, 13, 22, "Author"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
